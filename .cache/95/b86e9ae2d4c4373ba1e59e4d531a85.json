{"id":"MIIU","dependencies":[{"name":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\package.json","includedInParent":true,"mtime":1599878181948},{"name":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\node_modules\\@opentelemetry\\api\\package.json","includedInParent":true,"mtime":1599878181790},{"name":"@opentelemetry/context-base","loc":{"line":18,"column":31},"parent":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\node_modules\\@opentelemetry\\api\\build\\src\\api\\context.js","resolved":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\node_modules\\@opentelemetry\\context-base\\build\\src\\index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const t=require(\"@opentelemetry/context-base\");class e{constructor(){this._contextManager=new t.NoopContextManager}static getInstance(){return this._instance||(this._instance=new e),this._instance}setGlobalContextManager(t){return this._contextManager=t,t}active(){return this._contextManager.active()}with(t,e){return this._contextManager.with(t,e)}bind(t,e=this.active()){return this._contextManager.bind(t,e)}}exports.ContextAPI=e;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"Object","original":{"line":17,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"defineProperty","original":{"line":17,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"exports","original":{"line":17,"column":22},"generated":{"line":1,"column":35}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":17,"column":31},"generated":{"line":1,"column":43}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":17,"column":45},"generated":{"line":1,"column":56}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"value","original":{"line":17,"column":47},"generated":{"line":1,"column":57}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":17,"column":54},"generated":{"line":1,"column":64}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":18,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"context_base_1","original":{"line":18,"column":6},"generated":{"line":1,"column":74}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"require","original":{"line":18,"column":23},"generated":{"line":1,"column":76}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":18,"column":31},"generated":{"line":1,"column":84}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":22,"column":0},"generated":{"line":1,"column":115}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"ContextAPI","original":{"line":22,"column":6},"generated":{"line":1,"column":121}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"constructor","original":{"line":24,"column":4},"generated":{"line":1,"column":123}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_contextManager","original":{"line":25,"column":13},"generated":{"line":1,"column":137}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_contextManager","original":{"line":25,"column":13},"generated":{"line":1,"column":142}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":25,"column":31},"generated":{"line":1,"column":158}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"context_base_1","original":{"line":25,"column":35},"generated":{"line":1,"column":162}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"NoopContextManager","original":{"line":25,"column":50},"generated":{"line":1,"column":164}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"getInstance","original":{"line":28,"column":11},"generated":{"line":1,"column":183}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":32,"column":15},"generated":{"line":1,"column":204}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":29,"column":13},"generated":{"line":1,"column":211}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_instance","original":{"line":29,"column":18},"generated":{"line":1,"column":216}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_instance","original":{"line":30,"column":17},"generated":{"line":1,"column":228}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_instance","original":{"line":30,"column":17},"generated":{"line":1,"column":233}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":30,"column":29},"generated":{"line":1,"column":243}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"ContextAPI","original":{"line":30,"column":33},"generated":{"line":1,"column":247}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":32,"column":15},"generated":{"line":1,"column":250}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_instance","original":{"line":32,"column":20},"generated":{"line":1,"column":255}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"setGlobalContextManager","original":{"line":37,"column":4},"generated":{"line":1,"column":265}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"contextManager","original":{"line":37,"column":28},"generated":{"line":1,"column":289}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"contextManager","original":{"line":39,"column":15},"generated":{"line":1,"column":292}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_contextManager","original":{"line":38,"column":13},"generated":{"line":1,"column":299}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_contextManager","original":{"line":38,"column":13},"generated":{"line":1,"column":304}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"contextManager","original":{"line":38,"column":31},"generated":{"line":1,"column":320}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"contextManager","original":{"line":39,"column":15},"generated":{"line":1,"column":322}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"active","original":{"line":44,"column":4},"generated":{"line":1,"column":324}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":45,"column":15},"generated":{"line":1,"column":333}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":45,"column":15},"generated":{"line":1,"column":340}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_contextManager","original":{"line":45,"column":20},"generated":{"line":1,"column":345}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"active","original":{"line":45,"column":36},"generated":{"line":1,"column":361}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"with","original":{"line":53,"column":4},"generated":{"line":1,"column":370}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"context","original":{"line":53,"column":9},"generated":{"line":1,"column":375}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"fn","original":{"line":53,"column":18},"generated":{"line":1,"column":377}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":54,"column":15},"generated":{"line":1,"column":380}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":54,"column":15},"generated":{"line":1,"column":387}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_contextManager","original":{"line":54,"column":20},"generated":{"line":1,"column":392}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"with","original":{"line":54,"column":36},"generated":{"line":1,"column":408}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"context","original":{"line":54,"column":41},"generated":{"line":1,"column":413}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"fn","original":{"line":54,"column":50},"generated":{"line":1,"column":415}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"bind","original":{"line":62,"column":4},"generated":{"line":1,"column":418}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"target","original":{"line":62,"column":9},"generated":{"line":1,"column":423}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"context","original":{"line":62,"column":17},"generated":{"line":1,"column":425}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":62,"column":27},"generated":{"line":1,"column":427}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"active","original":{"line":62,"column":32},"generated":{"line":1,"column":432}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":63,"column":15},"generated":{"line":1,"column":442}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","original":{"line":63,"column":15},"generated":{"line":1,"column":449}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"_contextManager","original":{"line":63,"column":20},"generated":{"line":1,"column":454}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"bind","original":{"line":63,"column":36},"generated":{"line":1,"column":470}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"target","original":{"line":63,"column":41},"generated":{"line":1,"column":475}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"context","original":{"line":63,"column":49},"generated":{"line":1,"column":477}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"exports","original":{"line":66,"column":0},"generated":{"line":1,"column":481}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"ContextAPI","original":{"line":66,"column":8},"generated":{"line":1,"column":489}},{"source":"node_modules/@opentelemetry/api/build/src/api/context.js","name":"ContextAPI","original":{"line":66,"column":21},"generated":{"line":1,"column":500}}],"sources":{"node_modules/@opentelemetry/api/build/src/api/context.js":"\"use strict\";\r\n/*!\r\n * Copyright 2020, OpenTelemetry Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst context_base_1 = require(\"@opentelemetry/context-base\");\r\n/**\r\n * Singleton object which represents the entry point to the OpenTelemetry Context API\r\n */\r\nclass ContextAPI {\r\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\r\n    constructor() {\r\n        this._contextManager = new context_base_1.NoopContextManager();\r\n    }\r\n    /** Get the singleton instance of the Context API */\r\n    static getInstance() {\r\n        if (!this._instance) {\r\n            this._instance = new ContextAPI();\r\n        }\r\n        return this._instance;\r\n    }\r\n    /**\r\n     * Set the current context manager. Returns the initialized context manager\r\n     */\r\n    setGlobalContextManager(contextManager) {\r\n        this._contextManager = contextManager;\r\n        return contextManager;\r\n    }\r\n    /**\r\n     * Get the currently active context\r\n     */\r\n    active() {\r\n        return this._contextManager.active();\r\n    }\r\n    /**\r\n     * Execute a function with an active context\r\n     *\r\n     * @param context context to be active during function execution\r\n     * @param fn function to execute in a context\r\n     */\r\n    with(context, fn) {\r\n        return this._contextManager.with(context, fn);\r\n    }\r\n    /**\r\n     * Bind a context to a target function or event emitter\r\n     *\r\n     * @param target function or event emitter to bind\r\n     * @param context context to bind to the event emitter or function. Defaults to the currently active context\r\n     */\r\n    bind(target, context = this.active()) {\r\n        return this._contextManager.bind(target, context);\r\n    }\r\n}\r\nexports.ContextAPI = ContextAPI;\r\n"},"lineCount":null}},"error":null,"hash":"913184d68bc424f91228c8b23b77d285","cacheData":{"env":{}}}