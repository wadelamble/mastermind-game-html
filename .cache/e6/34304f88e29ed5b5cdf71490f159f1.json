{"id":"wXod","dependencies":[{"name":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\package.json","includedInParent":true,"mtime":1599878217647},{"name":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\node_modules\\@opentelemetry\\api\\package.json","includedInParent":true,"mtime":1599878181790},{"name":"../metrics/NoopMeterProvider","loc":{"line":18,"column":36},"parent":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\node_modules\\@opentelemetry\\api\\build\\src\\api\\metrics.js","resolved":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\node_modules\\@opentelemetry\\api\\build\\src\\metrics\\NoopMeterProvider.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const e=require(\"../metrics/NoopMeterProvider\");class t{constructor(){this._meterProvider=e.NOOP_METER_PROVIDER}static getInstance(){return this._instance||(this._instance=new t),this._instance}setGlobalMeterProvider(e){return this._meterProvider=e,e}getMeterProvider(){return this._meterProvider}getMeter(e,t){return this.getMeterProvider().getMeter(e,t)}}exports.MetricsAPI=t;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"Object","original":{"line":17,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"defineProperty","original":{"line":17,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"exports","original":{"line":17,"column":22},"generated":{"line":1,"column":35}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":17,"column":31},"generated":{"line":1,"column":43}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":17,"column":45},"generated":{"line":1,"column":56}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"value","original":{"line":17,"column":47},"generated":{"line":1,"column":57}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":17,"column":54},"generated":{"line":1,"column":64}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":18,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"NoopMeterProvider_1","original":{"line":18,"column":6},"generated":{"line":1,"column":74}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"require","original":{"line":18,"column":28},"generated":{"line":1,"column":76}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":18,"column":36},"generated":{"line":1,"column":84}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":22,"column":0},"generated":{"line":1,"column":116}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"MetricsAPI","original":{"line":22,"column":6},"generated":{"line":1,"column":122}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"constructor","original":{"line":24,"column":4},"generated":{"line":1,"column":124}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_meterProvider","original":{"line":25,"column":13},"generated":{"line":1,"column":138}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_meterProvider","original":{"line":25,"column":13},"generated":{"line":1,"column":143}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"NoopMeterProvider_1","original":{"line":25,"column":30},"generated":{"line":1,"column":158}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"NOOP_METER_PROVIDER","original":{"line":25,"column":50},"generated":{"line":1,"column":160}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"getInstance","original":{"line":28,"column":11},"generated":{"line":1,"column":180}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":32,"column":15},"generated":{"line":1,"column":201}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":29,"column":13},"generated":{"line":1,"column":208}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_instance","original":{"line":29,"column":18},"generated":{"line":1,"column":213}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_instance","original":{"line":30,"column":17},"generated":{"line":1,"column":225}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_instance","original":{"line":30,"column":17},"generated":{"line":1,"column":230}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":30,"column":29},"generated":{"line":1,"column":240}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"MetricsAPI","original":{"line":30,"column":33},"generated":{"line":1,"column":244}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":32,"column":15},"generated":{"line":1,"column":247}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_instance","original":{"line":32,"column":20},"generated":{"line":1,"column":252}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"setGlobalMeterProvider","original":{"line":37,"column":4},"generated":{"line":1,"column":262}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"provider","original":{"line":37,"column":27},"generated":{"line":1,"column":285}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"provider","original":{"line":39,"column":15},"generated":{"line":1,"column":288}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_meterProvider","original":{"line":38,"column":13},"generated":{"line":1,"column":295}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_meterProvider","original":{"line":38,"column":13},"generated":{"line":1,"column":300}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"provider","original":{"line":38,"column":30},"generated":{"line":1,"column":315}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"provider","original":{"line":39,"column":15},"generated":{"line":1,"column":317}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"getMeterProvider","original":{"line":44,"column":4},"generated":{"line":1,"column":319}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":45,"column":15},"generated":{"line":1,"column":338}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":45,"column":15},"generated":{"line":1,"column":345}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"_meterProvider","original":{"line":45,"column":20},"generated":{"line":1,"column":350}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"getMeter","original":{"line":50,"column":4},"generated":{"line":1,"column":365}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"name","original":{"line":50,"column":13},"generated":{"line":1,"column":374}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"version","original":{"line":50,"column":19},"generated":{"line":1,"column":376}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":51,"column":15},"generated":{"line":1,"column":379}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","original":{"line":51,"column":15},"generated":{"line":1,"column":386}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"getMeterProvider","original":{"line":51,"column":20},"generated":{"line":1,"column":391}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"getMeter","original":{"line":51,"column":39},"generated":{"line":1,"column":410}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"name","original":{"line":51,"column":48},"generated":{"line":1,"column":419}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"version","original":{"line":51,"column":54},"generated":{"line":1,"column":421}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"exports","original":{"line":54,"column":0},"generated":{"line":1,"column":425}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"MetricsAPI","original":{"line":54,"column":8},"generated":{"line":1,"column":433}},{"source":"node_modules/@opentelemetry/api/build/src/api/metrics.js","name":"MetricsAPI","original":{"line":54,"column":21},"generated":{"line":1,"column":444}}],"sources":{"node_modules/@opentelemetry/api/build/src/api/metrics.js":"\"use strict\";\r\n/*!\r\n * Copyright 2020, OpenTelemetry Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst NoopMeterProvider_1 = require(\"../metrics/NoopMeterProvider\");\r\n/**\r\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\r\n */\r\nclass MetricsAPI {\r\n    /** Empty private constructor prevents end users from constructing a new instance of the API */\r\n    constructor() {\r\n        this._meterProvider = NoopMeterProvider_1.NOOP_METER_PROVIDER;\r\n    }\r\n    /** Get the singleton instance of the Metrics API */\r\n    static getInstance() {\r\n        if (!this._instance) {\r\n            this._instance = new MetricsAPI();\r\n        }\r\n        return this._instance;\r\n    }\r\n    /**\r\n     * Set the current global meter. Returns the initialized global meter provider.\r\n     */\r\n    setGlobalMeterProvider(provider) {\r\n        this._meterProvider = provider;\r\n        return provider;\r\n    }\r\n    /**\r\n     * Returns the global meter provider.\r\n     */\r\n    getMeterProvider() {\r\n        return this._meterProvider;\r\n    }\r\n    /**\r\n     * Returns a meter from the global meter provider.\r\n     */\r\n    getMeter(name, version) {\r\n        return this.getMeterProvider().getMeter(name, version);\r\n    }\r\n}\r\nexports.MetricsAPI = MetricsAPI;\r\n"},"lineCount":null}},"error":null,"hash":"aaaaca9a3e983c8774f9c16d288d773f","cacheData":{"env":{}}}