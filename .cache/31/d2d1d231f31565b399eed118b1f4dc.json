{"id":"qY2D","dependencies":[{"name":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\package.json","includedInParent":true,"mtime":1599878217647},{"name":"C:\\Users\\wadel\\source\\repos\\mastermind-game-html-1\\node_modules\\@opentelemetry\\context-base\\package.json","includedInParent":true,"mtime":1599878181795}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});class e{constructor(e){this._currentContext=e?new Map(e):new Map}static createKey(e){return Symbol(e)}getValue(e){return this._currentContext.get(e)}setValue(t,r){const n=new e(this._currentContext);return n._currentContext.set(t,r),n}deleteValue(t){const r=new e(this._currentContext);return r._currentContext.delete(t),r}}exports.Context=e,e.ROOT_CONTEXT=new e,e.TODO=e.ROOT_CONTEXT;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Object","original":{"line":17,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"defineProperty","original":{"line":17,"column":7},"generated":{"line":1,"column":20}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"exports","original":{"line":17,"column":22},"generated":{"line":1,"column":35}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":31},"generated":{"line":1,"column":43}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":45},"generated":{"line":1,"column":56}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"value","original":{"line":17,"column":47},"generated":{"line":1,"column":57}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":54},"generated":{"line":1,"column":64}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":23,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":23,"column":6},"generated":{"line":1,"column":74}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"constructor","original":{"line":29,"column":4},"generated":{"line":1,"column":76}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"parentContext","original":{"line":29,"column":16},"generated":{"line":1,"column":88}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"_currentContext","original":{"line":30,"column":13},"generated":{"line":1,"column":91}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"_currentContext","original":{"line":30,"column":13},"generated":{"line":1,"column":96}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"parentContext","original":{"line":30,"column":31},"generated":{"line":1,"column":112}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":47},"generated":{"line":1,"column":114}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Map","original":{"line":30,"column":51},"generated":{"line":1,"column":118}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"parentContext","original":{"line":30,"column":55},"generated":{"line":1,"column":122}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":72},"generated":{"line":1,"column":125}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Map","original":{"line":30,"column":76},"generated":{"line":1,"column":129}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"createKey","original":{"line":33,"column":11},"generated":{"line":1,"column":133}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"description","original":{"line":33,"column":21},"generated":{"line":1,"column":150}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Symbol","original":{"line":34,"column":15},"generated":{"line":1,"column":153}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Symbol","original":{"line":34,"column":15},"generated":{"line":1,"column":160}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"description","original":{"line":34,"column":22},"generated":{"line":1,"column":167}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"getValue","original":{"line":41,"column":4},"generated":{"line":1,"column":170}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"key","original":{"line":41,"column":13},"generated":{"line":1,"column":179}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":15},"generated":{"line":1,"column":182}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":15},"generated":{"line":1,"column":189}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"_currentContext","original":{"line":42,"column":20},"generated":{"line":1,"column":194}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"get","original":{"line":42,"column":36},"generated":{"line":1,"column":210}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"key","original":{"line":42,"column":40},"generated":{"line":1,"column":214}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"setValue","original":{"line":51,"column":4},"generated":{"line":1,"column":217}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"key","original":{"line":51,"column":13},"generated":{"line":1,"column":226}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"value","original":{"line":51,"column":18},"generated":{"line":1,"column":228}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":52,"column":14},"generated":{"line":1,"column":231}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":52,"column":14},"generated":{"line":1,"column":237}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":24},"generated":{"line":1,"column":239}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":52,"column":28},"generated":{"line":1,"column":243}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":36},"generated":{"line":1,"column":245}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"_currentContext","original":{"line":52,"column":41},"generated":{"line":1,"column":250}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":54,"column":15},"generated":{"line":1,"column":267}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":53,"column":8},"generated":{"line":1,"column":274}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"_currentContext","original":{"line":53,"column":16},"generated":{"line":1,"column":276}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"set","original":{"line":53,"column":32},"generated":{"line":1,"column":292}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"key","original":{"line":53,"column":36},"generated":{"line":1,"column":296}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"value","original":{"line":53,"column":41},"generated":{"line":1,"column":298}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":54,"column":15},"generated":{"line":1,"column":301}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"deleteValue","original":{"line":62,"column":4},"generated":{"line":1,"column":303}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"key","original":{"line":62,"column":16},"generated":{"line":1,"column":315}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":63,"column":14},"generated":{"line":1,"column":318}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":63,"column":14},"generated":{"line":1,"column":324}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":24},"generated":{"line":1,"column":326}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":63,"column":28},"generated":{"line":1,"column":330}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":36},"generated":{"line":1,"column":332}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"_currentContext","original":{"line":63,"column":41},"generated":{"line":1,"column":337}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":65,"column":15},"generated":{"line":1,"column":354}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":64,"column":8},"generated":{"line":1,"column":361}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"_currentContext","original":{"line":64,"column":16},"generated":{"line":1,"column":363}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"delete","original":{"line":64,"column":32},"generated":{"line":1,"column":379}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"key","original":{"line":64,"column":39},"generated":{"line":1,"column":386}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"context","original":{"line":65,"column":15},"generated":{"line":1,"column":389}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"exports","original":{"line":68,"column":0},"generated":{"line":1,"column":392}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":68,"column":8},"generated":{"line":1,"column":400}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":68,"column":18},"generated":{"line":1,"column":408}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":70,"column":0},"generated":{"line":1,"column":410}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"ROOT_CONTEXT","original":{"line":70,"column":8},"generated":{"line":1,"column":412}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":23},"generated":{"line":1,"column":425}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":70,"column":27},"generated":{"line":1,"column":429}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":77,"column":0},"generated":{"line":1,"column":431}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"TODO","original":{"line":77,"column":8},"generated":{"line":1,"column":433}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"Context","original":{"line":77,"column":15},"generated":{"line":1,"column":438}},{"source":"node_modules/@opentelemetry/context-base/build/src/context.js","name":"ROOT_CONTEXT","original":{"line":77,"column":23},"generated":{"line":1,"column":440}}],"sources":{"node_modules/@opentelemetry/context-base/build/src/context.js":"\"use strict\";\r\n/*!\r\n * Copyright 2020, OpenTelemetry Authors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Class which stores and manages current context values. All methods which\r\n * update context such as get and delete do not modify an existing context,\r\n * but create a new one with updated values.\r\n */\r\nclass Context {\r\n    /**\r\n     * Construct a new context which inherits values from an optional parent context.\r\n     *\r\n     * @param parentContext a context from which to inherit values\r\n     */\r\n    constructor(parentContext) {\r\n        this._currentContext = parentContext ? new Map(parentContext) : new Map();\r\n    }\r\n    /** Get a key to uniquely identify a context value */\r\n    static createKey(description) {\r\n        return Symbol(description);\r\n    }\r\n    /**\r\n     * Get a value from the context.\r\n     *\r\n     * @param key key which identifies a context value\r\n     */\r\n    getValue(key) {\r\n        return this._currentContext.get(key);\r\n    }\r\n    /**\r\n     * Create a new context which inherits from this context and has\r\n     * the given key set to the given value.\r\n     *\r\n     * @param key context key for which to set the value\r\n     * @param value value to set for the given key\r\n     */\r\n    setValue(key, value) {\r\n        const context = new Context(this._currentContext);\r\n        context._currentContext.set(key, value);\r\n        return context;\r\n    }\r\n    /**\r\n     * Return a new context which inherits from this context but does\r\n     * not contain a value for the given key.\r\n     *\r\n     * @param key context key for which to clear a value\r\n     */\r\n    deleteValue(key) {\r\n        const context = new Context(this._currentContext);\r\n        context._currentContext.delete(key);\r\n        return context;\r\n    }\r\n}\r\nexports.Context = Context;\r\n/** The root context is used as the default parent context when there is no active context */\r\nContext.ROOT_CONTEXT = new Context();\r\n/**\r\n * This is another identifier to the root context which allows developers to easily search the\r\n * codebase for direct uses of context which need to be removed in later PRs.\r\n *\r\n * It's existence is temporary and it should be removed when all references are fixed.\r\n */\r\nContext.TODO = Context.ROOT_CONTEXT;\r\n"},"lineCount":null}},"error":null,"hash":"be794153bee74124def7c3c906f13892","cacheData":{"env":{}}}