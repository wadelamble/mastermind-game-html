{"id":"node_modules/@opentelemetry/context-base/build/src/context.js","dependencies":[{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\package.json","includedInParent":true,"mtime":1599517954770},{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\node_modules\\@opentelemetry\\context-base\\package.json","includedInParent":true,"mtime":1599520170890}],"generated":{"js":"\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Class which stores and manages current context values. All methods which\n * update context such as get and delete do not modify an existing context,\n * but create a new one with updated values.\n */\n\nclass Context {\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext) {\n    this._currentContext = parentContext ? new Map(parentContext) : new Map();\n  }\n  /** Get a key to uniquely identify a context value */\n\n\n  static createKey(description) {\n    return Symbol(description);\n  }\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n\n\n  getValue(key) {\n    return this._currentContext.get(key);\n  }\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n\n\n  setValue(key, value) {\n    const context = new Context(this._currentContext);\n\n    context._currentContext.set(key, value);\n\n    return context;\n  }\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n\n\n  deleteValue(key) {\n    const context = new Context(this._currentContext);\n\n    context._currentContext.delete(key);\n\n    return context;\n  }\n\n}\n\nexports.Context = Context;\n/** The root context is used as the default parent context when there is no active context */\n\nContext.ROOT_CONTEXT = new Context();\n/**\n * This is another identifier to the root context which allows developers to easily search the\n * codebase for direct uses of context which need to be removed in later PRs.\n *\n * It's existence is temporary and it should be removed when all references are fixed.\n */\n\nContext.TODO = Context.ROOT_CONTEXT;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":2,"column":0}},{"name":"Object","generated":{"line":18,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":6},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":6}},{"name":"defineProperty","generated":{"line":18,"column":7},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":7}},{"generated":{"line":18,"column":21},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":0}},{"name":"exports","generated":{"line":18,"column":22},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":22}},{"generated":{"line":18,"column":29},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":31},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":31}},{"generated":{"line":18,"column":43},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":0}},{"generated":{"line":18,"column":45},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":45}},{"name":"value","generated":{"line":19,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":47}},{"name":"value","generated":{"line":19,"column":2},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":47}},{"generated":{"line":19,"column":7},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":52}},{"generated":{"line":19,"column":9},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":54}},{"generated":{"line":20,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":45}},{"generated":{"line":20,"column":1},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":17,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":18,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":23,"column":0}},{"name":"Context","generated":{"line":27,"column":6},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":23,"column":6}},{"generated":{"line":27,"column":13},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":23,"column":0}},{"generated":{"line":27,"column":14},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":23,"column":14}},{"generated":{"line":28,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":24,"column":4}},{"name":"constructor","generated":{"line":33,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":29,"column":4}},{"name":"constructor","generated":{"line":33,"column":2},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":29,"column":4}},{"generated":{"line":33,"column":13},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":29,"column":15}},{"name":"parentContext","generated":{"line":33,"column":14},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":29,"column":16}},{"generated":{"line":33,"column":27},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":29,"column":15}},{"generated":{"line":33,"column":29},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":29,"column":31}},{"generated":{"line":34,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":8}},{"name":"_currentContext","generated":{"line":34,"column":9},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":13}},{"generated":{"line":34,"column":24},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":8}},{"name":"parentContext","generated":{"line":34,"column":27},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":31}},{"generated":{"line":34,"column":40},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":44}},{"generated":{"line":34,"column":43},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":47}},{"name":"Map","generated":{"line":34,"column":47},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":51}},{"generated":{"line":34,"column":50},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":47}},{"name":"parentContext","generated":{"line":34,"column":51},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":55}},{"generated":{"line":34,"column":64},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":47}},{"generated":{"line":34,"column":65},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":44}},{"generated":{"line":34,"column":68},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":72}},{"name":"Map","generated":{"line":34,"column":72},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":76}},{"generated":{"line":34,"column":75},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":72}},{"generated":{"line":34,"column":77},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":30,"column":8}},{"generated":{"line":35,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":31,"column":5}},{"generated":{"line":36,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":32,"column":4}},{"generated":{"line":39,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":33,"column":4}},{"name":"createKey","generated":{"line":39,"column":9},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":33,"column":11}},{"generated":{"line":39,"column":18},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":33,"column":4}},{"name":"description","generated":{"line":39,"column":19},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":33,"column":21}},{"generated":{"line":39,"column":30},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":33,"column":4}},{"generated":{"line":39,"column":32},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":33,"column":34}},{"generated":{"line":40,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":34,"column":8}},{"name":"Symbol","generated":{"line":40,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":34,"column":15}},{"generated":{"line":40,"column":17},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":34,"column":21}},{"name":"description","generated":{"line":40,"column":18},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":34,"column":22}},{"generated":{"line":40,"column":29},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":34,"column":21}},{"generated":{"line":40,"column":30},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":34,"column":8}},{"generated":{"line":41,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":35,"column":5}},{"generated":{"line":42,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":36,"column":4}},{"name":"getValue","generated":{"line":49,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":41,"column":4}},{"name":"getValue","generated":{"line":49,"column":2},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":41,"column":4}},{"generated":{"line":49,"column":10},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":41,"column":12}},{"name":"key","generated":{"line":49,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":41,"column":13}},{"generated":{"line":49,"column":14},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":41,"column":12}},{"generated":{"line":49,"column":16},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":41,"column":18}},{"generated":{"line":50,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":8}},{"generated":{"line":50,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":15}},{"name":"_currentContext","generated":{"line":50,"column":16},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":20}},{"generated":{"line":50,"column":31},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":15}},{"name":"get","generated":{"line":50,"column":32},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":36}},{"generated":{"line":50,"column":35},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":15}},{"name":"key","generated":{"line":50,"column":36},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":40}},{"generated":{"line":50,"column":39},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":15}},{"generated":{"line":50,"column":40},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":42,"column":8}},{"generated":{"line":51,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":43,"column":5}},{"generated":{"line":52,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":44,"column":4}},{"name":"setValue","generated":{"line":61,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":4}},{"name":"setValue","generated":{"line":61,"column":2},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":4}},{"generated":{"line":61,"column":10},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":12}},{"name":"key","generated":{"line":61,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":13}},{"generated":{"line":61,"column":14},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":12}},{"name":"value","generated":{"line":61,"column":16},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":18}},{"generated":{"line":61,"column":21},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":12}},{"generated":{"line":61,"column":23},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":51,"column":25}},{"generated":{"line":62,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":8}},{"name":"context","generated":{"line":62,"column":10},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":14}},{"generated":{"line":62,"column":17},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":21}},{"generated":{"line":62,"column":20},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":24}},{"name":"Context","generated":{"line":62,"column":24},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":28}},{"generated":{"line":62,"column":31},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":24}},{"generated":{"line":62,"column":32},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":36}},{"name":"_currentContext","generated":{"line":62,"column":37},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":41}},{"generated":{"line":62,"column":52},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":24}},{"generated":{"line":62,"column":53},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":52,"column":8}},{"name":"context","generated":{"line":64,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":8}},{"name":"context","generated":{"line":64,"column":4},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":8}},{"generated":{"line":64,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":15}},{"name":"_currentContext","generated":{"line":64,"column":12},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":16}},{"generated":{"line":64,"column":27},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":8}},{"name":"set","generated":{"line":64,"column":28},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":32}},{"generated":{"line":64,"column":31},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":8}},{"name":"key","generated":{"line":64,"column":32},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":36}},{"generated":{"line":64,"column":35},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":8}},{"name":"value","generated":{"line":64,"column":37},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":41}},{"generated":{"line":64,"column":42},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":53,"column":8}},{"generated":{"line":66,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":54,"column":8}},{"name":"context","generated":{"line":66,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":54,"column":15}},{"generated":{"line":66,"column":18},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":54,"column":8}},{"generated":{"line":67,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":55,"column":5}},{"generated":{"line":68,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":56,"column":4}},{"name":"deleteValue","generated":{"line":76,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":62,"column":4}},{"name":"deleteValue","generated":{"line":76,"column":2},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":62,"column":4}},{"generated":{"line":76,"column":13},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":62,"column":15}},{"name":"key","generated":{"line":76,"column":14},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":62,"column":16}},{"generated":{"line":76,"column":17},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":62,"column":15}},{"generated":{"line":76,"column":19},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":62,"column":21}},{"generated":{"line":77,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":8}},{"name":"context","generated":{"line":77,"column":10},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":14}},{"generated":{"line":77,"column":17},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":21}},{"generated":{"line":77,"column":20},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":24}},{"name":"Context","generated":{"line":77,"column":24},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":28}},{"generated":{"line":77,"column":31},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":24}},{"generated":{"line":77,"column":32},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":36}},{"name":"_currentContext","generated":{"line":77,"column":37},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":41}},{"generated":{"line":77,"column":52},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":24}},{"generated":{"line":77,"column":53},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":63,"column":8}},{"name":"context","generated":{"line":79,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":8}},{"name":"context","generated":{"line":79,"column":4},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":8}},{"generated":{"line":79,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":15}},{"name":"_currentContext","generated":{"line":79,"column":12},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":16}},{"generated":{"line":79,"column":27},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":8}},{"name":"delete","generated":{"line":79,"column":28},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":32}},{"generated":{"line":79,"column":34},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":8}},{"name":"key","generated":{"line":79,"column":35},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":39}},{"generated":{"line":79,"column":38},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":64,"column":8}},{"generated":{"line":81,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":65,"column":8}},{"name":"context","generated":{"line":81,"column":11},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":65,"column":15}},{"generated":{"line":81,"column":18},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":65,"column":8}},{"generated":{"line":82,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":66,"column":5}},{"generated":{"line":84,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":23,"column":14}},{"name":"exports","generated":{"line":86,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":68,"column":0}},{"generated":{"line":86,"column":7},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":68,"column":7}},{"name":"Context","generated":{"line":86,"column":8},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":68,"column":8}},{"generated":{"line":86,"column":15},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":68,"column":0}},{"name":"Context","generated":{"line":86,"column":18},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":68,"column":18}},{"generated":{"line":86,"column":25},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":68,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":69,"column":0}},{"name":"Context","generated":{"line":89,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":0}},{"generated":{"line":89,"column":7},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":7}},{"name":"ROOT_CONTEXT","generated":{"line":89,"column":8},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":8}},{"generated":{"line":89,"column":20},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":0}},{"generated":{"line":89,"column":23},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":23}},{"name":"Context","generated":{"line":89,"column":27},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":27}},{"generated":{"line":89,"column":34},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":23}},{"generated":{"line":89,"column":36},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":70,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":71,"column":0}},{"name":"Context","generated":{"line":97,"column":0},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":0}},{"generated":{"line":97,"column":7},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":7}},{"name":"TODO","generated":{"line":97,"column":8},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":8}},{"generated":{"line":97,"column":12},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":0}},{"name":"Context","generated":{"line":97,"column":15},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":15}},{"generated":{"line":97,"column":22},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":22}},{"name":"ROOT_CONTEXT","generated":{"line":97,"column":23},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":23}},{"generated":{"line":97,"column":35},"source":"node_modules/@opentelemetry/context-base/build/src/context.js","original":{"line":77,"column":0}}],"sources":{"node_modules/@opentelemetry/context-base/build/src/context.js":"\"use strict\";\n/*!\n * Copyright 2020, OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Class which stores and manages current context values. All methods which\n * update context such as get and delete do not modify an existing context,\n * but create a new one with updated values.\n */\nclass Context {\n    /**\n     * Construct a new context which inherits values from an optional parent context.\n     *\n     * @param parentContext a context from which to inherit values\n     */\n    constructor(parentContext) {\n        this._currentContext = parentContext ? new Map(parentContext) : new Map();\n    }\n    /** Get a key to uniquely identify a context value */\n    static createKey(description) {\n        return Symbol(description);\n    }\n    /**\n     * Get a value from the context.\n     *\n     * @param key key which identifies a context value\n     */\n    getValue(key) {\n        return this._currentContext.get(key);\n    }\n    /**\n     * Create a new context which inherits from this context and has\n     * the given key set to the given value.\n     *\n     * @param key context key for which to set the value\n     * @param value value to set for the given key\n     */\n    setValue(key, value) {\n        const context = new Context(this._currentContext);\n        context._currentContext.set(key, value);\n        return context;\n    }\n    /**\n     * Return a new context which inherits from this context but does\n     * not contain a value for the given key.\n     *\n     * @param key context key for which to clear a value\n     */\n    deleteValue(key) {\n        const context = new Context(this._currentContext);\n        context._currentContext.delete(key);\n        return context;\n    }\n}\nexports.Context = Context;\n/** The root context is used as the default parent context when there is no active context */\nContext.ROOT_CONTEXT = new Context();\n/**\n * This is another identifier to the root context which allows developers to easily search the\n * codebase for direct uses of context which need to be removed in later PRs.\n *\n * It's existence is temporary and it should be removed when all references are fixed.\n */\nContext.TODO = Context.ROOT_CONTEXT;\n"},"lineCount":null}},"error":null,"hash":"1b1ecf5ecd239093b180dd89d6e2f321","cacheData":{"env":{}}}