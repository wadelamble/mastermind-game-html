{"id":"tFNs","dependencies":[{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\node_modules\\@azure\\core-tracing\\dist-esm\\src\\tracers\\noop\\noOpTracer.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\package.json","includedInParent":true,"mtime":1602532043896},{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\node_modules\\@azure\\core-tracing\\package.json","includedInParent":true,"mtime":1599520170884},{"name":"./noOpSpan","loc":{"line":3,"column":25},"parent":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\node_modules\\@azure\\core-tracing\\dist-esm\\src\\tracers\\noop\\noOpTracer.js","resolved":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\node_modules\\@azure\\core-tracing\\dist-esm\\src\\tracers\\noop\\noOpSpan.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.NoOpTracer=void 0;var t=require(\"./noOpSpan\"),r=function(){function r(){}return r.prototype.startSpan=function(r,n){return new t.NoOpSpan},r.prototype.getCurrentSpan=function(){return new t.NoOpSpan},r.prototype.withSpan=function(t,r){return r()},r.prototype.bind=function(t,r){return t},r}();exports.NoOpTracer=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":20}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":35}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":43}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":57}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":108}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":122}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":135}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":144}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":149}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":1,"column":156}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":1,"column":158}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":1,"column":168}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":16,"column":2},"generated":{"line":1,"column":178}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":16,"column":12},"generated":{"line":1,"column":187}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":16,"column":27},"generated":{"line":1,"column":189}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":192}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":199}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":1,"column":203}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":17,"column":11},"generated":{"line":1,"column":205}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":215}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":217}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":227}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":242}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":1,"column":253}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":1,"column":260}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":15},"generated":{"line":1,"column":264}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":1,"column":266}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":1,"column":276}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":1,"column":278}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":1,"column":288}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":1,"column":297}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":32,"column":60},"generated":{"line":1,"column":306}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":32,"column":73},"generated":{"line":1,"column":308}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":1,"column":311}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":33,"column":11},"generated":{"line":1,"column":318}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":323}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":325}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":335}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":1,"column":340}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":41,"column":10},"generated":{"line":1,"column":349}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":41,"column":21},"generated":{"line":1,"column":351}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":11},"generated":{"line":1,"column":354}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":42,"column":11},"generated":{"line":1,"column":361}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":44,"column":0},"generated":{"line":1,"column":364}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":366}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":369}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":377}},{"source":"../../../../src/tracers/noop/noOpTracer.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":388}}],"sources":{"../../../../src/tracers/noop/noOpTracer.ts":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { NoOpSpan } from \"./noOpSpan\";\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nexport class NoOpTracer implements Tracer {\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n  startSpan(_name: string, _options?: SpanOptions): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => ReturnType<T>>(_span: Span, fn: T): ReturnType<T> {\n    return fn();\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(target: T, _span?: Span): T {\n    return target;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"21a03b0ffd6fe46d17ecc637c5db520c","cacheData":{"env":{}}}