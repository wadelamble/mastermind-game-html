{"id":"Dpo0","dependencies":[{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\node_modules\\@azure\\core-auth\\dist-esm\\src\\tokenCredential.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\package.json","includedInParent":true,"mtime":1602532043896},{"name":"C:\\Users\\milesl25\\source\\repos\\mastermind-game-html\\node_modules\\@azure\\core-auth\\package.json","includedInParent":true,"mtime":1599520170887}],"generated":{"js":"\"use strict\";function e(e){return e&&\"function\"==typeof e.getToken&&(void 0===e.signRequest||e.getToken.length>0)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.isTokenCredential=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":0}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":1,"column":13}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":16},"generated":{"line":1,"column":22}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":69,"column":34},"generated":{"line":1,"column":24}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":1,"column":27}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":76,"column":4},"generated":{"line":1,"column":34}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":35},"generated":{"line":1,"column":37}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":11},"generated":{"line":1,"column":56}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":77,"column":22},"generated":{"line":1,"column":58}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":32},"generated":{"line":1,"column":74}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":5},"generated":{"line":1,"column":78}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":16},"generated":{"line":1,"column":80}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":45},"generated":{"line":1,"column":93}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":56},"generated":{"line":1,"column":95}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":65},"generated":{"line":1,"column":104}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":78,"column":74},"generated":{"line":1,"column":111}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":114}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":121}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":136}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":144}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":157}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":158}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":165}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":169}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":177}},{"source":"../../src/tokenCredential.ts","name":null,"original":{"line":80,"column":1},"generated":{"line":1,"column":195}}],"sources":{"../../src/tokenCredential.ts":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * @param scopes The list of scopes for which the token will have access.\n   * @param options The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n     */\n    spanOptions?: SpanOptions;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: any): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  return (\n    credential &&\n    typeof credential.getToken === \"function\" &&\n    (credential.signRequest === undefined || credential.getToken.length > 0)\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"92a3757bfdad9356f534c5871c944727","cacheData":{"env":{}}}