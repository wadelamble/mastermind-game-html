{"version":3,"sources":["index.js"],"names":["myGamePiece","screenSize","height","window","innerHeight","width","innerWidth","setGameBoardMarginToZero","sideBarWidth","gradeBarWidth","guessBarWidth","numRows","buttonSize","gradeButtonSize","verticalOffsetOfCanvas","color_clicked","guessr","grader","guess_loc","redButton","document","createElement","id","style","backgroundColor","addEventListener","redButtonClick","blueButton","blueButtonClick","greenButton","greenButtonClick","yellowButton","yellowButtonClick","purpleButton","purpleButtonClick","whiteButton","whiteButtonClick","redGradeButton","redGradeButtonClick","whiteGradeButton","whiteGradeButtonClick","mainButton","mainButtonClick","doneButton","doneButtonClick","helpButton","helpButtonClick","backButton","backButtonClick","resetButton","resetButtonClick","modeButton","border","modeButtonClick","mode","codeBreaker","codeMaker","value","clickRound","guessMatrix","element","x","y","grade","reds","whites","code","numPlayerGradeClicks","gradeRow","colors","posCodes","subCode","i","j","k","l","push","temp","localStorage","getItem","newUser","getStats","currentTV","userStats","timesVisited","uploadStats","setItem","gamesPlayed","gamesWon","averageTries","winRate","highScore","startStats","startMenu","drawStartButtons","startGame","myGameArea","start","startStatPage","getElementById","innerHTML","canvas","setAttribute","marginLeft","String","context","getContext","body","insertBefore","childNodes","rectangle","drawBoard","drawGuessButtons","drawGradeButtons","drawDoneButton","drawHelpButton","drawBackButton","drawResetButton","drawModeButton","drawMainButton","computerCode","clear","clearRect","reset","backCB","drawGuessCircle","backCM","grading","drawGradeCircle","pop","resetStats","confirm","hOffset","drawGuessButton","drawGradeButton","button","position","borderRadius","wOffset","offsetLeft","wOffsetStr","hOffsetStr","top","left","textContent","arrow","classList","add","color","appendChild","baseWidth","buttonSizePx","processClick","processGradeClick","index","row","includes","realGrade","computerGrade","alert","computerGuess","msg","getClickIndex","toBeGraded","newHighScore","setStats","winScreen","setTimeout","loseScreen","ctx","fillStyle","fillRect","circle","r","beginPath","arc","Math","PI","fill","text","font","textAlign","fillText","x_loc","y_loc","flashing","setInterval","flash","clearInterval","count","change","floor","random","statsStr","JSON","stringify","parse","won","score","currentGP","newGP","currentGW","newGW","newWR","currentAT","currentTotalPoints","newTotalPoints","newAT","guess_2","code_2","length","toRemoveIndex","indexOf","splice","removeCodes","prevGuess","newPosCodes","posCode","guess","len","skip_lines","fontSize","fontString","location","href","resetStatClick","settingsButtonClick"],"mappings":"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","file":"mastermind-game-html.e9d7da44.js","sourceRoot":"..","sourcesContent":["//\r\n// Globals -- eek so many, what's the right pattern here?\r\n//\r\nvar myGamePiece;\r\n\r\n/*const screenSize = {\r\n    height : 0.6 * screen.height,\r\n    width : 0.6 * screen.height\r\n};*/\r\n\r\nconst screenSize = {\r\n    height : 0.85 * window.innerHeight,\r\n    width : 0.95 * window.innerWidth\r\n};\r\n\r\nvar setGameBoardMarginToZero = false;\r\n// never wider than square\r\nif (screenSize.height < screenSize.width) {\r\n    screenSize.width = screenSize.height;\r\n}\r\nelse {\r\n    setGameBoardMarginToZero = true;\r\n}\r\n\r\nvar sideBarWidth = screenSize.width / 5;\r\n//Ask dad if we should change this\r\nvar gradeBarWidth = sideBarWidth;\r\nvar guessBarWidth = screenSize.width - sideBarWidth - gradeBarWidth;\r\nvar numRows = 11;\r\nvar buttonSize = sideBarWidth / 3;\r\n//this is only useful if it isn't a square\r\n/*\r\nif (buttonSize > ((screenSize.height / numRows) * 0.75)) {\r\n    alert(\"hi\")\r\n    buttonSize = ((screenSize.height / numRows) * 0.75)\r\n}\r\n*/\r\nvar gradeButtonSize = buttonSize * 0.6;\r\nvar verticalOffsetOfCanvas = 10;\r\nvar color_clicked = 'black';\r\n//grade, guess circle radius\r\nvar guessr = (screenSize.height / (numRows * 2)) * 0.5;\r\nvar grader = (screenSize.height / (numRows * 2)) * 0.2;\r\nvar guess_loc = [1, 1];\r\n\r\nvar redButton = document.createElement(\"button\");\r\nredButton.id = \"redButton\";\r\nredButton.style.backgroundColor = 'red';\r\nredButton.addEventListener('click', function() { redButtonClick(); });\r\n\r\nvar blueButton = document.createElement(\"button\");\r\nblueButton.id = \"blueButton\";\r\nblueButton.style.backgroundColor = 'blue';\r\nblueButton.addEventListener('click', function() { blueButtonClick(); });\r\n\r\nvar greenButton = document.createElement(\"button\");\r\ngreenButton.id = \"greenButton\";\r\ngreenButton.style.backgroundColor = 'green';\r\ngreenButton.addEventListener('click', function() { greenButtonClick(); });\r\n\r\nvar yellowButton = document.createElement(\"button\");\r\nyellowButton.id = \"yellowButton\";\r\nyellowButton.style.backgroundColor = 'yellow';\r\nyellowButton.addEventListener('click', function() { yellowButtonClick(); });\r\n\r\nvar purpleButton = document.createElement(\"button\");\r\npurpleButton.id = \"purpleButton\";\r\npurpleButton.style.backgroundColor = 'purple';\r\npurpleButton.addEventListener('click', function() { purpleButtonClick(); });\r\n\r\nvar whiteButton = document.createElement(\"button\");\r\nwhiteButton.id = \"whiteButton\";\r\nwhiteButton.style.backgroundColor = 'white';\r\nwhiteButton.addEventListener('click', function() { whiteButtonClick(); });\r\n\r\nvar redGradeButton = document.createElement(\"button\");\r\nredGradeButton.id = \"redGradeButton\";\r\nredGradeButton.style.backgroundColor = 'red';\r\nredGradeButton.addEventListener('click', function() { redGradeButtonClick(); });\r\n\r\nwhiteGradeButton = document.createElement(\"button\");\r\nwhiteGradeButton.id = \"whiteGradeButton\";\r\nwhiteGradeButton.style.backgroundColor = 'white';\r\nwhiteGradeButton.addEventListener('click', function() { whiteGradeButtonClick(); });\r\n\r\nvar mainButton = document.createElement(\"button\");\r\nmainButton.id = \"mainButton\";\r\nmainButton.style.backgroundColor = 'purple';\r\nmainButton.addEventListener('click', function() { mainButtonClick(); });\r\n\r\n\r\nvar doneButton = document.createElement(\"button\");\r\ndoneButton.id = \"doneButton\";\r\ndoneButton.style.backgroundColor = 'blue';\r\ndoneButton.addEventListener('click', function() { doneButtonClick(); });\r\n\r\nvar helpButton = document.createElement(\"button\");\r\nhelpButton.id = \"helpButton\";\r\nhelpButton.style.backgroundColor = 'purple';\r\nhelpButton.addEventListener('click', function() { helpButtonClick(); });\r\n\r\nvar backButton = document.createElement(\"button\");\r\nbackButton.id = \"backButton\";\r\nbackButton.style.backgroundColor = 'blue';\r\nbackButton.addEventListener('click', function() { backButtonClick(); });\r\n\r\nvar resetButton = document.createElement(\"button\");\r\nresetButton.id = \"resetButton\";\r\nresetButton.style.backgroundColor = 'grey';\r\nresetButton.addEventListener('click', function() { resetButtonClick(); });\r\n\r\n\r\nvar modeButton = document.createElement(\"button\");\r\nmodeButton.id = \"modeButton\";\r\nmodeButton.style.backgroundColor = 'black';\r\nmodeButton.style.border = 'black';\r\nmodeButton.addEventListener('click', function() { modeButtonClick(); });\r\n\r\nvar mode = {\r\n    codeBreaker: 'Breaker',\r\n    codeMaker: 'Maker',\r\n    value: 'Breaker'\r\n};\r\n\r\n\r\nvar clickRound = 0;\r\n\r\nvar guessMatrix =   [['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0']];\r\n                    \r\nvar element = {\r\n    x: 0,\r\n    y: 0\r\n};\r\n\r\nvar grade = {\r\n    reds: 0,\r\n    whites: 0\r\n};\r\n\r\n\r\nvar code = [];\r\n\r\nvar numPlayerGradeClicks = 0;\r\n\r\nvar gradeRow = 0;\r\n\r\ncolors = [\"red\", \"blue\", \"green\", \"yellow\", \"purple\", \"white\"]\r\nposCodes = []\r\nsubCode = []\r\nfor (i=0; i<6; i++) {\r\n    for (j=0; j<6; j++) {\r\n        for (k=0; k<6; k++) {\r\n            for (l=0; l<6; l++) {\r\n                subCode = [colors[i], colors[j], colors[k], colors[l]];\r\n                posCodes.push(subCode);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar temp = 0\r\n\r\nif (!localStorage.getItem(\"1\")) {\r\n    localStorage.setItem(\"1\", \"test\") \r\n    var newUser = true;\r\n    helpButtonClick();\r\n    var userStats = {\r\n        timesVisited: 0,\r\n        gamesPlayed: 0,\r\n        gamesWon: 0,\r\n        averageTries: 0,\r\n        winRate: 0,\r\n        highScore: 0,\r\n    }\r\n    startStats();\r\n}\r\nelse {\r\n    var newUser = false\r\n    getStats();\r\n    //alert(\"Welcome back!\")\r\n    //oh i think this resets if they switch between html pages\r\n    //idk how to fix, shouldn't be too bad tho\r\n    currentTV = userStats.timesVisited\r\n    userStats.timesVisited = (currentTV + 1);\r\n    uploadStats();\r\n    //show stats here\r\n}\r\n\r\n//azure blob storage globals\r\n/*const { BlobServiceClient } = require(\"@azure/storage-blob\");\r\nconst createContainerButton = document.getElementById(\"create-container-button\");\r\nconst deleteContainerButton = document.getElementById(\"delete-container-button\");\r\nconst selectButton = document.getElementById(\"select-button\");\r\nconst fileInput = document.getElementById(\"file-input\");\r\nconst listButton = document.getElementById(\"list-button\");\r\nconst deleteButton = document.getElementById(\"delete-button\");\r\nconst status = document.getElementById(\"status\");\r\nconst fileList = document.getElementById(\"file-list\");\r\n\r\nconst reportStatus = message => {\r\n    status.innerHTML += `${message}<br/>`;\r\n    status.scrollTop = status.scrollHeight;\r\n}\r\n// Update <placeholder> with your Blob service SAS URL string\r\nconst blobSasUrl = \"https://mileswadestorage.blob.core.windows.net/?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2020-09-08T06:24:59Z&st=2020-09-07T22:24:59Z&spr=https&sig=DVSxA0oAFsn%2B2m1bVhhfE6ZUWzXVRyyWoHEKN0hbqLI%3D\";\r\n\r\n// Create a new BlobServiceClient\r\nconst blobServiceClient = new BlobServiceClient(blobSasUrl);\r\n\r\n// Create a unique name for the container by \r\n// appending the current time to the file name\r\nconst containerName = \"mw-mastermind-blob-container\"\r\n\r\n// Get a container client from the BlobServiceClient\r\nconst containerClient = blobServiceClient.getContainerClient(containerName);\r\n\r\nconst createContainer = async () => {\r\n    try {\r\n        reportStatus(`Creating container \"${containerName}\"...`);\r\n        await containerClient.create();\r\n        reportStatus(`Done.`);\r\n    } catch (error) {\r\n        reportStatus(error.message);\r\n    }\r\n};\r\n\r\nconst deleteContainer = async () => {\r\n    try {\r\n        reportStatus(`Deleting container \"${containerName}\"...`);\r\n        await containerClient.delete();\r\n        reportStatus(`Done.`);\r\n    } catch (error) {\r\n        reportStatus(error.message);\r\n    }\r\n};\r\n\r\ncreateContainerButton.addEventListener(\"click\", createContainer);\r\ndeleteContainerButton.addEventListener(\"click\", deleteContainer);\r\n\r\nconst listFiles = async () => {\r\n    fileList.size = 0;\r\n    fileList.innerHTML = \"\";\r\n    try {\r\n        reportStatus(\"Retrieving file list...\");\r\n        let iter = containerClient.listBlobsFlat();\r\n        let blobItem = await iter.next();\r\n        while (!blobItem.done) {\r\n            fileList.size += 1;\r\n            fileList.innerHTML += `<option>${blobItem.value.name}</option>`;\r\n            blobItem = await iter.next();\r\n        }\r\n        if (fileList.size > 0) {\r\n            reportStatus(\"Done.\");\r\n        } else {\r\n            reportStatus(\"The container does not contain any files.\");\r\n        }\r\n    } catch (error) {\r\n        reportStatus(error.message);\r\n    }\r\n};\r\n\r\nlistButton.addEventListener(\"click\", listFiles);\r\n\r\nconst uploadFiles = async () => {\r\n    try {\r\n        reportStatus(\"Uploading files...\");\r\n        const promises = [];\r\n        for (const file of fileInput.files) {\r\n            const blockBlobClient = containerClient.getBlockBlobClient(file.name);\r\n            promises.push(blockBlobClient.uploadBrowserData(file));\r\n        }\r\n        await Promise.all(promises);\r\n        reportStatus(\"Done.\");\r\n        listFiles();\r\n    }\r\n    catch (error) {\r\n            reportStatus(error.message);\r\n    }\r\n}\r\n\r\nselectButton.addEventListener(\"click\", () => fileInput.click());\r\nfileInput.addEventListener(\"change\", uploadFiles);\r\n\r\nconst deleteFiles = async () => {\r\n    try {\r\n        if (fileList.selectedOptions.length > 0) {\r\n            reportStatus(\"Deleting files...\");\r\n            for (const option of fileList.selectedOptions) {\r\n                await containerClient.deleteBlob(option.text);\r\n            }\r\n            reportStatus(\"Done.\");\r\n            listFiles();\r\n        } else {\r\n            reportStatus(\"No files selected.\");\r\n        }\r\n    } catch (error) {\r\n        reportStatus(error.message);\r\n    }\r\n};\r\n\r\ndeleteButton.addEventListener(\"click\", deleteFiles);\r\n*/\r\n\r\n//\r\n// end globals\r\n//\r\n\r\nwindow.startMenu = function startMenu() {\r\n    drawStartButtons();\r\n}\r\n\r\nwindow.startGame = function startGame() {\r\n    myGameArea.start();\r\n}\r\n\r\nwindow.startStatPage = function startStatPage() {\r\n    //getStats();\r\n    document.getElementById(\"gamesPlayed\").innerHTML = \"Games played: \" + userStats.gamesPlayed;\r\n    document.getElementById(\"gamesWon\").innerHTML = \"Games won: \" + userStats.gamesWon;\r\n    document.getElementById(\"winRate\").innerHTML = \"Win Rate: \" + userStats.winRate + \"%\";\r\n    document.getElementById(\"averageTries\").innerHTML = \"Average number of guesses: \" + userStats.averageTries;\r\n    document.getElementById(\"highScore\").innerHTML = \"High score (least number of guessses): \" + userStats.highScore;\r\n    //we can un-comment this out, i just don't think its necessary. its kinda cool for us to see\r\n    //document.getElementById(\"timesVisited\").innerHTML = \"Times you've visited this site: \" + userStats.timesVisited;\r\n}\r\n\r\nvar myGameArea = {\r\n    canvas : document.createElement(\"canvas\"),\r\n    start : function() {\r\n        this.canvas.setAttribute('id', 'board');\r\n        this.canvas.height = screenSize.height;\r\n        this.canvas.width = screenSize.width;\r\n        // i.e., on a phone\r\n        if (setGameBoardMarginToZero) {\r\n            this.canvas.style.marginLeft = \"0px\";\r\n        }\r\n        else {\r\n            this.canvas.style.marginLeft = String((window.innerWidth - this.canvas.width) / 2) + \"px\";\r\n        }\r\n        this.context = this.canvas.getContext(\"2d\");\r\n        document.body.insertBefore(this.canvas, document.body.childNodes[0]);\r\n        rectangle(sideBarWidth, screenSize.height, \"#1f1f14\", screenSize.width - sideBarWidth, 0);\r\n        drawBoard();\r\n        drawGuessButtons();\r\n        drawGradeButtons();\r\n        drawDoneButton(doneButton);\r\n        drawHelpButton(helpButton);\r\n        drawBackButton(backButton);\r\n        drawResetButton(resetButton);\r\n        drawModeButton(modeButton);\r\n        drawMainButton(mainButton);\r\n        if (mode.value === mode.codeBreaker) {\r\n            computerCode();\r\n        }\r\n    },\r\n    clear : function() {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n    reset: function() {\r\n        // set state variables. this is super unacceptable\r\n        grade.reds = 0;\r\n        grade.whites = 0;\r\n        element.x = 0;\r\n        element.y = 0;\r\n\r\n        clickRound = 0;\r\n\r\n        guessMatrix =   [['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0']];\r\n        \r\n        temp = 0;        \r\n        code = [];\r\n        gradeRow = 0\r\n\r\n        this.start();\r\n    },\r\n\r\n    backCB: function() {\r\n        if (element.x != 4) {\r\n            guessMatrix[element.y - 1][element.x - 1] = '0'\r\n\r\n            drawGuessCircle(element.x, element.y, \"black\")\r\n            if (element.x == 1) {\r\n                element.x = 4;\r\n                element.y -= 1;\r\n            }\r\n            else {\r\n                element.x -= 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    backCM: function(grading) {\r\n        if (grading) {\r\n            for (i=0; i<4; i++) {\r\n                drawGradeCircle(i+1, element.y, \"black\");\r\n            }\r\n            grade.reds = 0;\r\n            grade.whites = 0;\r\n        }\r\n        else {\r\n            drawGuessCircle(temp, 0, \"black\")\r\n            temp -= 1\r\n            code.pop()\r\n            if (temp === 3) {\r\n\r\n                for (i=0; i<4; i++) {\r\n                    drawGuessCircle(i+1, 1, \"black\")\r\n                    guessMatrix[0] = ['0', '0', '0', '0']\r\n                    element.x = 1;\r\n                    element.y = 1;\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n    resetStats: function() {\r\n        if (confirm(\"Are you sure you want to reset your statistics?\")) {\r\n            startStats();\r\n            startStatPage();\r\n        }\r\n    }\r\n\r\n        \r\n\r\n}\r\n\r\nfunction drawStartButtons() {\r\n    //var optionsDiv = document.getElementById(\"startButtons\");\r\n    //optionsDiv.style.height = String(0.9 * screenSize.height) + 'px';\r\n    /*\r\n    var optionsDiv = document.getElementById(\"Play\");\r\n    optionsDiv.style.top = String(0.4 * screenSize.height) + 'px';\r\n    optionsDiv.style.left = String(0.97 * screenSize.height) + 'px';\r\n    \r\n    var optionsDiv = document.getElementById(\"Stats\");\r\n    optionsDiv.style.top = String(0.7 * screenSize.height) + 'px';\r\n    optionsDiv.style.left = String(0.97 * screenSize.height) + 'px';\r\n    \r\n    var optionsDiv = document.getElementById(\"Settings\");\r\n    optionsDiv.style.top = String(screenSize.height) + 'px';\r\n    optionsDiv.style.left = String(0.97 * screenSize.height) + 'px';\r\n    */\r\n}\r\n\r\nfunction drawGuessButtons() {\r\n    var hOffset = verticalOffsetOfCanvas;\r\n    hOffset += (screenSize.height * 1.5 / numRows) - (buttonSize / 2);\r\n    drawGuessButton(redButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(blueButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(greenButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(yellowButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(purpleButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(whiteButton, hOffset);\r\n}\r\n\r\nfunction drawGradeButtons() {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)*7 + (screenSize.height * 1.5 / numRows) - (gradeButtonSize / 2);\r\n    drawGradeButton(redGradeButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGradeButton(whiteGradeButton, hOffset);\r\n}\r\n\r\nfunction drawMainButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(sideBarWidth - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft + guessBarWidth + 1;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \" Main Menu\";\r\n    var arrow = document.createElement(\"I\")\r\n    arrow.classList.add(\"arrow\");\r\n    arrow.classList.add(\"left\")\r\n    //button.appendChild(arrow);\r\n    button.insertBefore(arrow, button.childNodes[0])\r\n    \r\n    //button.style.textAlign = \"center\";\r\n    //button.style.fontSize = '13px';\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\nfunction drawDoneButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 10 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(sideBarWidth - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft + guessBarWidth + gradeBarWidth + 1;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Done\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawHelpButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(((guessBarWidth + gradeBarWidth) / 3) - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    //alert((guessBarWidth + gradeBarWidth) / 3)\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Help\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawBackButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(((guessBarWidth + gradeBarWidth) / 3) - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var baseWidth = document.getElementById(\"board\").offsetLeft;\r\n    var addedWidth = (guessBarWidth + gradeBarWidth) / 3;\r\n    var wOffset = baseWidth + addedWidth;\r\n    //alert(addedWidth)\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Back\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawResetButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(((guessBarWidth + gradeBarWidth) / 3) - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var baseWidth = document.getElementById(\"board\").offsetLeft;\r\n    var addedWidth = ((guessBarWidth + gradeBarWidth) / 3);\r\n    var wOffset = baseWidth + addedWidth * 2 + 1\r\n    //alert(addedWidth)\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Reset\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawModeButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(sideBarWidth - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft + guessBarWidth + gradeBarWidth + 1;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = mode.value;\r\n    //button.style.textAlign = \"center\";\r\n    //button.style.fontSize = '13px';\r\n    button.style.color = \"grey\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawGuessButton(button, hOffset) {\r\n    var buttonSizePx = buttonSize + 'px';\r\n    button.style.position = 'absolute';\r\n    button.style.borderRadius = '100%'\r\n    button.style.width = buttonSizePx;\r\n    button.style.height = buttonSizePx;\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawGradeButton(button, hOffset) {\r\n    var buttonSizePx = (buttonSize / 2)+ 'px';\r\n    button.style.position = 'absolute';\r\n    button.style.borderRadius = '100%'\r\n    button.style.width = buttonSizePx;\r\n    button.style.height = buttonSizePx;\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    wOffset += screenSize.width - (sideBarWidth / 2) - gradeButtonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction redButtonClick () {\r\n    processClick(redButton.style.backgroundColor);\r\n}\r\n\r\nfunction blueButtonClick () {\r\n    processClick(blueButton.style.backgroundColor);\r\n}\r\n\r\nfunction greenButtonClick () {\r\n    processClick(greenButton.style.backgroundColor);\r\n}\r\n\r\nfunction yellowButtonClick () {\r\n    processClick(yellowButton.style.backgroundColor);\r\n}\r\n\r\nfunction purpleButtonClick () {\r\n    processClick(purpleButton.style.backgroundColor);\r\n}\r\n\r\nfunction whiteButtonClick () {\r\n    processClick(whiteButton.style.backgroundColor);\r\n}\r\n\r\nfunction redGradeButtonClick () {\r\n    processGradeClick(redGradeButton.style.backgroundColor);\r\n}\r\n\r\nfunction whiteGradeButtonClick () {\r\n    processGradeClick(whiteGradeButton.style.backgroundColor);\r\n}\r\n\r\nwindow.mainButtonClick = function mainButtonClick() {\r\n    window.location.href = \"index.html\";\r\n}\r\n\r\nfunction doneButtonClick() {\r\n    if (mode.value == mode.codeMaker && code != []) {\r\n        for (index=0; index<10; index++) {\r\n            row = guessMatrix[index]\r\n            //alert(row)\r\n            if (row.includes('0')) {\r\n                gradeRow = index;\r\n                //alert(\"breaking\")\r\n                break;\r\n            //alert(gradeRow)\r\n            }\r\n        }\r\n    }\r\n    //alert(gradeRow)\r\n    realGrade = [grade.reds, grade.whites]\r\n    computerGrade(guessMatrix[gradeRow - 1], code)\r\n    if ((grade.reds != realGrade[0]) || (grade.whites != realGrade[1])) {\r\n        alert(\"hmm. check your work...\")\r\n        grade.reds = realGrade[0]\r\n        grade.whites = realGrade[1]\r\n    }\r\n    \r\n    computerGuess(gradeRow)\r\n} \r\n\r\nfunction modeButtonClick() {\r\n    if (mode.value === mode.codeBreaker) {\r\n        mode.value = mode.codeMaker;\r\n    }\r\n    else {\r\n        mode.value = mode.codeBreaker;\r\n    }\r\n    document.getElementById(\"modeButton\").textContent = mode.value;\r\n    myGameArea.reset();\r\n    if (mode.value === mode.codeBreaker) {\r\n        computerCode();\r\n    }\r\n\r\n} \r\n\r\n\r\nfunction helpButtonClick() {\r\n    /*var instructionsButton = document.createElement(\"button\");\r\n    instructionsButton.id = \"helpButton\";\r\n    instructionsButton.style.backgroundColor = 'white';\r\n    instructionsButton.style.border = 'white';\r\n    helpButton.addEventListener('click', function() { helpButtonClick(); });\r\n\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    instructionsButton.style.position = 'absolute';\r\n    instructionsButton.style.width = String(guessBarWidth + gradeBarWidth - 1) + \"px\";\r\n    instructionsButton.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    instructionsButton.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - instructionsButtonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    instructionsButton.style.top = hOffsetStr;\r\n    instructionsButton.style.left = wOffsetStr;\r\n    instructionsButton.textContent = \"Just do it\";\r\n    instructionsButton.style.color = \"black\";\r\n    document.body.appendChild(instructionsButton);\r\n    //instructionsButton.addEventListener('click', function() { helpButtonClick(); });\r\n        \r\n    //textBlock.innerText = \"Help\";\r\n    //document.body.appendChild(textBlock);*/\r\n    var msg = \"Welcome to Mastermind. \";\r\n    msg += \"Attempt to guess the secret code or create a secret code for the computer to guess.\\n\\n\";\r\n    msg += \"To guess or grade, use the buttons on the right-hand side of the game board. \";\r\n    msg += \"To change play mode, click the \\\"Maker/Breaker\\\" button in the lower right corner of the game board.\\n\";\r\n    msg += \"A red grade peg indicates that a guess is the correct color in the correct position. \";\r\n    msg += \"A white grade peg indicates that a guess is the correct color, but in the incorrect position. \";\r\n\r\n    alert(msg);\r\n\r\n} \r\n\r\nfunction backButtonClick() {\r\n    if (mode.value == mode.codeMaker) {\r\n        myGameArea.backCM();\r\n    }\r\n    else {\r\n        myGameArea.backCB()\r\n    }\r\n}\r\n\r\nfunction resetButtonClick() {\r\n    myGameArea.reset()\r\n}\r\n\r\nwindow.resetStatClick = function resetStatClick() {\r\n    myGameArea.resetStats();\r\n}\r\n\r\n\r\nwindow.settingsButtonClick = function settingsButtonClick() {\r\n    alert(\"coming soon\")\r\n}\r\n\r\n\r\nfunction processClick(color) {\r\n    if (mode.value === mode.codeBreaker) {\r\n        getClickIndex();\r\n        drawGuessCircle(element.x, element.y, color);\r\n        guessMatrix[element.y - 1][element.x - 1] = color;\r\n        if (element.x < 4) {\r\n        }\r\n        //finished a guess\r\n        else {\r\n            //make this the actual grade\r\n            gradeRow = element.y - 1\r\n            toBeGraded = guessMatrix[gradeRow]\r\n            computerGrade(toBeGraded, code);\r\n            var y = element.y;\r\n            var x = 0;\r\n            for (i = 1; i <= grade.reds; i++) {\r\n                x++;\r\n                drawGradeCircle(x, y, \"red\");\r\n            }\r\n            for (i = 1; i <= grade.whites; i++) {\r\n                x++;\r\n                drawGradeCircle(x, y, \"white\");\r\n            }\r\n            \r\n            if (grade.reds === 4) {\r\n                newHighScore = setStats(true, element.y);\r\n                winScreen();\r\n                setTimeout(function() {\r\n                    msg = \"Congratulations, you won! \\n\";\r\n                    if (newHighScore) {\r\n                        msg += \"New high score: \" + userStats.highScore + \"! \\n\"\r\n                    }\r\n                    msg += \"Play again?\"\r\n                    \r\n                    for (j=0; j<4; j++) {\r\n                        drawGuessCircle(j + 1, 0, code[j]);\r\n                    }\r\n\r\n                    if (confirm(msg)) {\r\n                        myGameArea.reset();\r\n                    }\r\n                    else {\r\n                        //should we leave it how it is, or go to the main menu?\r\n                        //i think main menu\r\n                        //hmm actually maybe just leave it how it is, and then make a button to go back to the main menu\r\n                    }\r\n\r\n                }, 2500);\r\n\r\n                \r\n            }\r\n            else if (element.y === 10) {\r\n                setStats(false, 10);\r\n                loseScreen();\r\n                setTimeout(function() {\r\n                    alert(\"Nice try :(\");\r\n                }, 1500)\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (temp < 4) {\r\n            temp += 1\r\n            drawGuessCircle(temp, 0, color);\r\n            code.push(color)\r\n            if (temp === 4) {\r\n                computerGuess(0)\r\n            }\r\n        }\r\n        else {\r\n            alert(\"You are the code maker, you can't try to crack your own code.\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction processGradeClick(color) {\r\n    if (mode.value == mode.codeMaker) {\r\n        numPlayerGradeClicks++;\r\n        if (numPlayerGradeClicks > 4) {\r\n            alert(\"too many player grades entered\");\r\n        }\r\n        else {\r\n            if (color === \"red\") {\r\n                grade.reds++;\r\n            }\r\n            else if (color === \"white\") {\r\n                grade.whites++;\r\n            }\r\n            drawGradeCircle(numPlayerGradeClicks, element.y, color);\r\n        }\r\n    }\r\n    else {\r\n        alert(\"You are the code breaker, you can't grade your own guess.\");\r\n    }\r\n}\r\n\r\nfunction getClickIndex() {\r\n    for (i=0; i < 10; i++) {\r\n        for (j=0; j < 4; j++) {\r\n            if (guessMatrix[i][j] === '0') {\r\n                element.x = j + 1;\r\n                element.y = i + 1;\r\n                return;\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nfunction rectangle(width, height, color, x, y) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;    \r\n    ctx = myGameArea.context;\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n}\r\n\r\nfunction circle(r, color, x, y) {\r\n    this.r = r;\r\n    this.x = x;\r\n    this.y = y;\r\n    ctx = myGameArea.context;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.r, 0, 2*Math.PI);\r\n    ctx.fill();\r\n}\r\n\r\nfunction text(font, text, x, y) {\r\n    //this.font = font\r\n    //this.text = text\r\n    //this.x = x\r\n    //this.y = y\r\n    ctx = myGameArea.context;\r\n    ctx.font = font;\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillStyle = \"white\"\r\n    ctx.fillText(text, x, y, 0.8 * sideBarWidth);\r\n}\r\n\r\nfunction drawGuessCircle(x_loc, y_loc, color) {\r\n    this.x = x_loc * guessBarWidth / 5;\r\n    this.y = y_loc * screenSize.height / numRows + screenSize.height / (numRows * 2 );\r\n    circle(guessr, color, this.x, this.y);\r\n}\r\n\r\nfunction drawGradeCircle(x_loc, y_loc, color) {\r\n    this.x = guessBarWidth + (x_loc * gradeBarWidth / 5);\r\n    this.y = y_loc * screenSize.height / numRows + screenSize.height / (numRows * 2 );\r\n    circle(grader, color, this.x, this.y);\r\n}\r\n\r\n\r\n\r\nfunction winScreen() {\r\n    var mode = 0;\r\n    var flashing = setInterval(flash, 100);\r\n    function flash() {\r\n        mode++;\r\n        if (mode % 2 == 1) {\r\n            for (j=0; j<4; j++) {\r\n                drawGuessCircle(j + 1, 0, code[j]);\r\n            }\r\n        }\r\n        else {\r\n            for (j=0; j<4; j++) {\r\n                drawGuessCircle(j + 1, 0, \"black\");\r\n            }\r\n        }\r\n        if (mode == 20) {\r\n            clearInterval(flashing)\r\n        }\r\n    }\r\n}\r\n\r\nfunction loseScreen() {\r\n    var count = 0;\r\n    var flashing = setInterval(change, 200);\r\n\r\n    function change() {\r\n        count++;\r\n        if (count == 5) {\r\n            clearInterval(flashing)\r\n        }\r\n        \r\n        else {\r\n            for (j=0; j<4; j++) {\r\n                color = colors[Math.floor(Math.random() * 6)];\r\n                drawGuessCircle(j + 1, 0, color);\r\n            }\r\n        }\r\n        \r\n    }\r\n    //alert(\"real code now...\")\r\n    //alert(code)\r\n    setTimeout(function() {\r\n        for (j=0; j<4; j++) {\r\n            drawGuessCircle(j + 1, 0, code[j]);\r\n        }\r\n    }, 1000)\r\n    //alert(\"drew real code\")\r\n}\r\n\r\nfunction uploadStats() {\r\n    statsStr = JSON.stringify(userStats)\r\n    localStorage.setItem('stats', statsStr);\r\n}\r\n\r\nfunction getStats() {\r\n    statsStr = localStorage.getItem('stats');\r\n    userStats = JSON.parse(statsStr);\r\n    if (userStats == null) {\r\n        alert(\"Error 123: Coding fail\")\r\n    }\r\n}\r\n\r\nfunction startStats() {\r\n    userStats.highScore = 10;\r\n    userStats.gamesPlayed = 0;\r\n    userStats.gamesWon = 0;\r\n    userStats.winRate = 0;\r\n    userStats.averageTries = 0;\r\n    userStats.timesVisited = 1;\r\n    uploadStats();\r\n}\r\n\r\nfunction setStats(won, score) {\r\n    getStats();\r\n    if (score < userStats.highScore) {\r\n        userStats.highScore = score;\r\n        newHighScore = true;\r\n    }\r\n    else {\r\n        newHighScore = false;\r\n    }\r\n    currentGP = userStats.gamesPlayed;\r\n    newGP = currentGP + 1;\r\n    userStats.gamesPlayed = newGP;\r\n    if (won) {\r\n        currentGW = userStats.gamesWon;\r\n        newGW = currentGW + 1;\r\n        userStats.gamesWon = newGW;\r\n    }\r\n    newWR = Math.floor(newGW / newGP) * 100;\r\n    userStats.winRate = newWR;\r\n    currentAT = userStats.averageTries;\r\n    currentTotalPoints = currentAT * currentGP;\r\n    //alert(currentTotalPoints)\r\n    newTotalPoints = currentTotalPoints + score;\r\n    newAT = newTotalPoints / userStats.gamesPlayed;\r\n    //alert(newAT)\r\n    userStats.averageTries = newAT;\r\n    uploadStats();  \r\n    return newHighScore;\r\n}\r\n\r\n\r\nfunction computerGrade(toBeGraded, code) {\r\n    if (toBeGraded.includes('0')) {\r\n        alert(\"Error 123: Coding Fail\");\r\n    }\r\n    grade.reds = 0;\r\n    grade.whites = 0;\r\n    const guess_2 = [];\r\n    const code_2 = [];\r\n    for (i = 0; i < 4; i++) {\r\n        if (code[i] === toBeGraded[i]) {\r\n            grade.reds++;  \r\n        }\r\n        else {\r\n            guess_2.push(toBeGraded[i]);\r\n            code_2.push(code[i]);\r\n        }\r\n    }\r\n    while (guess_2.length !== 0) {\r\n        if (code_2.includes(guess_2[0])) {\r\n            grade.whites++;\r\n            toRemoveIndex = code_2.indexOf(guess_2[0]);\r\n            code_2.splice(toRemoveIndex, 1);\r\n        }\r\n        guess_2.splice(0, 1);\r\n    }\r\n}\r\n\r\nfunction removeCodes(posCodes, prevGuess) {\r\n    var newPosCodes = [];\r\n    //alert(\"in remove codes\");\r\n    //alert(length(posCodes));\r\n    realGrade = [grade.reds, grade.whites];\r\n    for (index = 0; index < posCodes.length; index++) {\r\n        //grade.reds = 0;\r\n        //grade.whites = 0;\r\n        //alert(index)\r\n        posCode = posCodes[index];\r\n        \r\n        //alert(\"grades\");\r\n        //alert(realGrade[0]);\r\n        //alert(realGrade[1]);\r\n        computerGrade(prevGuess, posCode);\r\n        //alert(prevGuess);\r\n        //alert(posCode);\r\n        //alert(grade.reds);\r\n        //alert(grade.whites);\r\n        if ((grade.reds == realGrade[0]) && (grade.whites == realGrade[1])) {\r\n            //alert(\"idk what to sayyy\");\r\n            newPosCodes.push(posCode);\r\n        }\r\n    }\r\n    posCodes = newPosCodes;\r\n    grade.reds = realGrade[0];\r\n    grade.whites = realGrade[1];\r\n    return posCodes;\r\n}\r\n\r\n\r\nfunction computerGuess(gradeRow) {\r\n    if (gradeRow === 0) {\r\n        //very random, change\r\n        guess = [\"yellow\", \"green\", \"blue\", \"white\"]\r\n    }\r\n    else if (grade.reds === 4) {\r\n        alert(\"Computer Wins!!!\");\r\n        myGameArea.reset();\r\n        return;\r\n        \r\n        //end program\r\n        //idk how...\r\n        //dad's reset func?\r\n    }\r\n    else {\r\n        //alert(\"here\")\r\n        //alert(guessMatrix[gradeRow - 1])\r\n        //alert(grade.reds + \",\" + grade.whites);\r\n        posCodes = removeCodes(posCodes, guessMatrix[gradeRow - 1])\r\n        //alert(grade.reds + \",\" + grade.whites);\r\n        //alert(posCodes)\r\n        //this is just picking a random one, maybe change it\r\n        len = posCodes.length;\r\n        if (len === 0) {\r\n            alert(\"hmm. check your work...\")\r\n        }\r\n        guess = posCodes[len - 1]\r\n    }\r\n    //alert(\"drawing...\")\r\n    //alert(guess)\r\n    for (index=0; index<4; index++) {\r\n        drawGuessCircle(index + 1, gradeRow + 1, guess[index]);\r\n    }\r\n    guessMatrix[gradeRow] = guess;\r\n    element.y++;\r\n    numPlayerGradeClicks = 0;\r\n    grade.reds = 0;\r\n    grade.whites = 0;\r\n}\r\n\r\nfunction computerCode() {\r\n    code = []\r\n    //alert()\r\n    for (i=0; i<4; i++) {\r\n        code.push(colors[Math.floor(Math.random() * 6)]);\r\n    }\r\n    //this displays it, which... it definitely shouldn't, \r\n    //but lets leave it here while we are still working\r\n    /*\r\n    for (index=0; index<4; index++) {\r\n        color = code[index];\r\n        drawGuessCircle(index + 1, 0, color);\r\n    }\r\n    */\r\n}\r\n\r\n\r\n\r\nfunction drawBoard() {\r\n    var skip_lines = [1, 7, 8, 10];\r\n    for (i = 1; i < numRows; i++) {\r\n        //horizontal lines\r\n        this.y = i * screenSize.height / numRows;\r\n        if (!(skip_lines.includes(i))) {\r\n            rectangle(screenSize.width - sideBarWidth, 1, \"black\", 0, this.y);\r\n        } else {\r\n            rectangle(screenSize.width, 1, \"black\", 0, this.y);\r\n        }\r\n    }\r\n    //dividing vertical lines\r\n    rectangle(1, screenSize.height, \"black\", guessBarWidth, 0);\r\n    rectangle(1, screenSize.height, \"black\", guessBarWidth + gradeBarWidth, 0);\r\n\r\n    //shade the code box\r\n    rectangle(guessBarWidth, (screenSize.height / numRows), \"#331a00\", 0, 0)\r\n    rectangle(gradeBarWidth - 1, screenSize.height / numRows, \"331a00\", guessBarWidth + 1, 0)\r\n\r\n\r\n    this.guessr = (screenSize.height / (numRows * 2)) * 0.5;\r\n    this.grader = (screenSize.height / (numRows * 2)) * 0.2;\r\n    for (i = 0; i <  numRows; i++) {\r\n        this.y = i * screenSize.height / numRows + screenSize.height / (numRows * 2 );\r\n        for (j = 1; j < 5; j++) {\r\n            //guessing circles\r\n            this.x = j * guessBarWidth / 5;\r\n            circle(this.guessr, \"black\", this.x, this.y);\r\n            //grading circles\r\n            //don't need a grade for the code\r\n            if (i !== 0) {\r\n                this.x = guessBarWidth +     (j * gradeBarWidth / 5);\r\n                circle(this.grader, \"black\", this.x, this.y);\r\n            }\r\n        }\r\n    }\r\n    this.fontSize = screenSize.height / numRows * 0.4;\r\n    this.fontString = fontSize + \"px Arial\"\r\n    text(this.fontString, \"GUESSES\", guessBarWidth + gradeBarWidth * 1.5, (screenSize.height / (numRows * 2)) + fontSize / 2);\r\n    text(this.fontString, \"GRADES\", guessBarWidth + gradeBarWidth * 1.5, screenSize.height - (screenSize.height * 3 / numRows) - fontSize);\r\n    //computerCode();\r\n    //computerGuess(0)\r\n}\r\n\r\n//\r\n// sas URL\r\n// https://mileswadestorage.blob.core.windows.net/?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2020-09-08T06:24:59Z&st=2020-09-07T22:24:59Z&spr=https&sig=DVSxA0oAFsn%2B2m1bVhhfE6ZUWzXVRyyWoHEKN0hbqLI%3D\r\n//\r\n"]}