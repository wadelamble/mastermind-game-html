{"version":3,"sources":["index.js"],"names":["myGamePiece","screenSize","height","window","innerHeight","width","innerWidth","setGameBoardMarginToZero","sideBarWidth","gradeBarWidth","guessBarWidth","numRows","buttonSize","gradeButtonSize","verticalOffsetOfCanvas","color_clicked","guessr","grader","guess_loc","redButton","document","createElement","id","style","backgroundColor","addEventListener","redButtonClick","blueButton","blueButtonClick","greenButton","greenButtonClick","yellowButton","yellowButtonClick","purpleButton","purpleButtonClick","whiteButton","whiteButtonClick","redGradeButton","redGradeButtonClick","whiteGradeButton","whiteGradeButtonClick","mainButton","mainButtonClick","doneButton","doneButtonClick","helpButton","helpButtonClick","backButton","backButtonClick","resetButton","resetButtonClick","modeButton","border","modeButtonClick","mode","codeBreaker","codeMaker","value","clickRound","guessMatrix","element","x","y","grade","reds","whites","code","numPlayerGradeClicks","gradeRow","colors","posCodes","subCode","i","j","k","l","push","currentUsername","temp","overallStats","gamesPlayed","gamesWon","winRate","averageTries","highScore","timesVisited","userStats","updateTimesVisited","getStats","currentTV","uploadStats","containerName","downloadFromBlob","JSON","parse","overallStatsStr","stringify","error","testing","startMenu","sessionStorage","getItem","setItem","prompt","usernameInfo","includes","UNIstr","uploadToBlob","startGame","myGameArea","start","startStatPage","getElementById","innerHTML","overallStatPage","blobName","data","blobSasUrl","blockBlobClient","BlobServiceClient","getContainerClient","getBlockBlobClient","upload","length","containerClient","blobClient","getBlobClient","downloadBlockBlobResponse","download","downloaded","blobToString","blob","fileReader","FileReader","Promise","resolve","reject","onloadend","ev","target","result","onerror","readAsText","blobBody","deleteBlob","option","text","canvas","setAttribute","marginLeft","String","context","getContext","body","insertBefore","childNodes","rectangle","drawBoard","drawGuessButtons","drawGradeButtons","drawDoneButton","drawHelpButton","drawBackButton","drawResetButton","drawModeButton","drawMainButton","computerCode","clear","clearRect","reset","backCB","drawGuessCircle","backCM","grading","drawGradeCircle","pop","resetStats","confirm","startStats","drawStartButtons","hOffset","drawGuessButton","drawGradeButton","button","position","borderRadius","wOffset","offsetLeft","wOffsetStr","hOffsetStr","top","left","textContent","arrow","classList","add","color","appendChild","baseWidth","buttonSizePx","processClick","processGradeClick","index","row","realGrade","computerGrade","alert","computerGuess","msg","getClickIndex","toBeGraded","newHighScore","setStats","winScreen","setTimeout","loseScreen","ctx","fillStyle","fillRect","circle","r","beginPath","arc","Math","PI","fill","font","textAlign","fillText","x_loc","y_loc","flashing","setInterval","flash","clearInterval","count","change","floor","random","statsStr","won","score","currentGP","newGP","currentGW","newGW","newWR","currentAT","currentTotalPoints","newTotalPoints","newAT","guess_2","code_2","toRemoveIndex","indexOf","splice","removeCodes","prevGuess","newPosCodes","posCode","guess","len","skip_lines","fontSize","fontString","location","href","resetStatClick","settingsButtonClick"],"mappings":"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","file":"mastermind-game-html.56660815.js","sourceRoot":"..","sourcesContent":["//\r\n// Globals -- eek so many, what's the right pattern here?\r\n//\r\nvar myGamePiece;\r\n\r\n/*const screenSize = {\r\n    height : 0.6 * screen.height,\r\n    width : 0.6 * screen.height\r\n};*/\r\n\r\nconst screenSize = {\r\n    height : 0.85 * window.innerHeight,\r\n    width : 0.95 * window.innerWidth\r\n};\r\n\r\nvar setGameBoardMarginToZero = false;\r\n// never wider than square\r\nif (screenSize.height < screenSize.width) {\r\n    screenSize.width = screenSize.height;\r\n}\r\nelse {\r\n    setGameBoardMarginToZero = true;\r\n}\r\n\r\nvar sideBarWidth = screenSize.width / 5;\r\n//Ask dad if we should change this\r\nvar gradeBarWidth = sideBarWidth;\r\nvar guessBarWidth = screenSize.width - sideBarWidth - gradeBarWidth;\r\nvar numRows = 11;\r\nvar buttonSize = sideBarWidth / 3;\r\n//this is only useful if it isn't a square\r\n/*\r\nif (buttonSize > ((screenSize.height / numRows) * 0.75)) {\r\n    alert(\"hi\")\r\n    buttonSize = ((screenSize.height / numRows) * 0.75)\r\n}\r\n*/\r\nvar gradeButtonSize = buttonSize * 0.6;\r\nvar verticalOffsetOfCanvas = 10;\r\nvar color_clicked = 'black';\r\n//grade, guess circle radius\r\nvar guessr = (screenSize.height / (numRows * 2)) * 0.5;\r\nvar grader = (screenSize.height / (numRows * 2)) * 0.2;\r\nvar guess_loc = [1, 1];\r\n\r\nvar redButton = document.createElement(\"button\");\r\nredButton.id = \"redButton\";\r\nredButton.style.backgroundColor = 'red';\r\nredButton.addEventListener('click', function() { redButtonClick(); });\r\n\r\nvar blueButton = document.createElement(\"button\");\r\nblueButton.id = \"blueButton\";\r\nblueButton.style.backgroundColor = 'blue';\r\nblueButton.addEventListener('click', function() { blueButtonClick(); });\r\n\r\nvar greenButton = document.createElement(\"button\");\r\ngreenButton.id = \"greenButton\";\r\ngreenButton.style.backgroundColor = 'green';\r\ngreenButton.addEventListener('click', function() { greenButtonClick(); });\r\n\r\nvar yellowButton = document.createElement(\"button\");\r\nyellowButton.id = \"yellowButton\";\r\nyellowButton.style.backgroundColor = 'yellow';\r\nyellowButton.addEventListener('click', function() { yellowButtonClick(); });\r\n\r\nvar purpleButton = document.createElement(\"button\");\r\npurpleButton.id = \"purpleButton\";\r\npurpleButton.style.backgroundColor = 'purple';\r\npurpleButton.addEventListener('click', function() { purpleButtonClick(); });\r\n\r\nvar whiteButton = document.createElement(\"button\");\r\nwhiteButton.id = \"whiteButton\";\r\nwhiteButton.style.backgroundColor = 'white';\r\nwhiteButton.addEventListener('click', function() { whiteButtonClick(); });\r\n\r\nvar redGradeButton = document.createElement(\"button\");\r\nredGradeButton.id = \"redGradeButton\";\r\nredGradeButton.style.backgroundColor = 'red';\r\nredGradeButton.addEventListener('click', function() { redGradeButtonClick(); });\r\n\r\nwhiteGradeButton = document.createElement(\"button\");\r\nwhiteGradeButton.id = \"whiteGradeButton\";\r\nwhiteGradeButton.style.backgroundColor = 'white';\r\nwhiteGradeButton.addEventListener('click', function() { whiteGradeButtonClick(); });\r\n\r\nvar mainButton = document.createElement(\"button\");\r\nmainButton.id = \"mainButton\";\r\nmainButton.style.backgroundColor = 'purple';\r\nmainButton.addEventListener('click', function() { mainButtonClick(); });\r\n\r\n\r\nvar doneButton = document.createElement(\"button\");\r\ndoneButton.id = \"doneButton\";\r\ndoneButton.style.backgroundColor = 'blue';\r\ndoneButton.addEventListener('click', function() { doneButtonClick(); });\r\n\r\nvar helpButton = document.createElement(\"button\");\r\nhelpButton.id = \"helpButton\";\r\nhelpButton.style.backgroundColor = 'purple';\r\nhelpButton.addEventListener('click', function() { helpButtonClick(); });\r\n\r\nvar backButton = document.createElement(\"button\");\r\nbackButton.id = \"backButton\";\r\nbackButton.style.backgroundColor = 'blue';\r\nbackButton.addEventListener('click', function() { backButtonClick(); });\r\n\r\nvar resetButton = document.createElement(\"button\");\r\nresetButton.id = \"resetButton\";\r\nresetButton.style.backgroundColor = 'grey';\r\nresetButton.addEventListener('click', function() { resetButtonClick(); });\r\n\r\n\r\nvar modeButton = document.createElement(\"button\");\r\nmodeButton.id = \"modeButton\";\r\nmodeButton.style.backgroundColor = 'black';\r\nmodeButton.style.border = 'black';\r\nmodeButton.addEventListener('click', function() { modeButtonClick(); });\r\n\r\nvar mode = {\r\n    codeBreaker: 'Breaker',\r\n    codeMaker: 'Maker',\r\n    value: 'Breaker'\r\n};\r\n\r\n\r\nvar clickRound = 0;\r\n\r\nvar guessMatrix =   [['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0'],\r\n                     ['0', '0', '0', '0']];\r\n                    \r\nvar element = {\r\n    x: 0,\r\n    y: 0\r\n};\r\n\r\nvar grade = {\r\n    reds: 0,\r\n    whites: 0\r\n};\r\n\r\n\r\nvar code = [];\r\n\r\nvar numPlayerGradeClicks = 0;\r\n\r\nvar gradeRow = 0;\r\n\r\ncolors = [\"red\", \"blue\", \"green\", \"yellow\", \"purple\", \"white\"]\r\nposCodes = []\r\nsubCode = []\r\nfor (i=0; i<6; i++) {\r\n    for (j=0; j<6; j++) {\r\n        for (k=0; k<6; k++) {\r\n            for (l=0; l<6; l++) {\r\n                subCode = [colors[i], colors[j], colors[k], colors[l]];\r\n                posCodes.push(subCode);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar temp = 0\r\nvar currentUsername;\r\n\r\nvar overallStats = {\r\n    gamesPlayed: 0,\r\n    gamesWon: 0,\r\n    winRate: 0,\r\n    averageTries: 0,\r\n    highScore: 0,\r\n    timesVisited: 0\r\n}\r\n\r\nvar userStats = {\r\n    gamesPlayed: 0,\r\n    gamesWon: 0,\r\n    winRate: 0,\r\n    averageTries: 0,\r\n    highScore: 0,\r\n    timesVisited: 0\r\n}\r\n\r\n\r\n\r\n\r\n//azure blob storage globals\r\ntesting = 0\r\n\r\n//\r\n// end globals\r\n//\r\n\r\nwindow.startMenu = function startMenu() {\r\n    if (!sessionStorage.getItem(\"test\")) {\r\n        sessionStorage.setItem(\"test\", \"foo\") \r\n        helpButtonClick();\r\n        //this would be gotten from dad's thing\r\n        currentUsername = window.prompt(\"Enter Player Name\");\r\n        try {\r\n            usernameInfo = downloadFromBlob(\"mw-mastermind-usernames\", \"usernames\")\r\n            if (JSON.parse(usernameInfo).includes(currentUsername)) {\r\n                //sign in\r\n            }\r\n            else {\r\n                //create account\r\n            }\r\n        }\r\n        catch (error) {\r\n            usernameInfo = [currentUsername];\r\n            UNIstr = JSON.stringify(usernameInfo)\r\n            uploadToBlob(\"mw-mastermind-usernames\", \"usernames\", UNIstr)\r\n        }\r\n\r\n        userStats = getStats(currentUsername);\r\n    }\r\n    updateTimesVisited(currentUsername);\r\n}\r\n\r\nwindow.startGame = function startGame() {\r\n    myGameArea.start();\r\n}\r\n\r\nwindow.startStatPage = function startStatPage() {\r\n    //getStats();\r\n    document.getElementById(\"gamesPlayed\").innerHTML = \"Games played: \" + userStats.gamesPlayed;\r\n    document.getElementById(\"gamesWon\").innerHTML = \"Games won: \" + userStats.gamesWon;\r\n    document.getElementById(\"winRate\").innerHTML = \"Win Rate: \" + userStats.winRate + \"%\";\r\n    document.getElementById(\"averageTries\").innerHTML = \"Average number of guesses: \" + userStats.averageTries;\r\n    document.getElementById(\"highScore\").innerHTML = \"High score (least number of guessses): \" + userStats.highScore;\r\n    //we can un-comment this out, i just don't think its necessary. its kinda cool for us to see\r\n    //document.getElementById(\"timesVisited\").innerHTML = \"Times you've visited this site: \" + userStats.timesVisited;\r\n}\r\n\r\nwindow.overallStatPage = function overallStatPage() {\r\n    overallStats = downloadFromBlob(\"mw-mastermind-usernames\", \"overallStats\");\r\n    overallStats = JSON.parse(overallStats);\r\n    document.getElementById(\"gamesPlayed\").innerHTML = \"Most games played: \" + overallStats.gamesPlayed;\r\n    document.getElementById(\"gamesWon\").innerHTML = \"Most games won: \" + overallStats.gamesWon;\r\n    document.getElementById(\"winRate\").innerHTML = \"Highest win Rate: \" + overallStats.winRate + \"%\";\r\n    document.getElementById(\"averageTries\").innerHTML = \"Best average number of guesses: \" + overallStats.averageTries;\r\n    document.getElementById(\"highScore\").innerHTML = \"Lowest high score (least number of guessses): \" + overallStats.highScore;\r\n}\r\n\r\nfunction updateTimesVisited(currentUsername) {\r\n    getStats(currentUsername);\r\n    currentTV = userStats.timesVisited\r\n    userStats.timesVisited = (currentTV + 1);\r\n    uploadStats(currentUsername);\r\n    containerName = \"mw-mastermind-usernames\"\r\n    try {\r\n        overallStats = downloadFromBlob(containerName, \"overallStats\")\r\n        overallStats = JSON.parse(overallStats);\r\n        overallStats.timesVisited += 1;\r\n        overallStatsStr = JSON.stringify(overallStats);\r\n        //uploadToBlob(\"mw-mastermind-usernames\", \"overallStats\", overallStatsStr);\r\n    }\r\n    catch (error) {\r\n        overallStats = {\r\n            gamesPlayed: 0,\r\n            gamesWon: 0,\r\n            winRate: 0,\r\n            averageTries: 10,\r\n            highScore: 0,\r\n            timesVisited: 1\r\n        }\r\n        overallStatsStr = JSON.stringify(overallStats);\r\n        //uploadToBlob(\"mw-mastermind-usernames\", \"overallStats\", overallStatsStr)\r\n    }\r\n\r\n}\r\n    \r\nconst uploadToBlob = async (containerName, blobName, data) => {\r\n    const blobSasUrl = \"https://mileswadestorage.blob.core.windows.net/?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2020-09-13T04:53:53Z&st=2020-09-12T20:53:53Z&spr=https,http&sig=0cR8UDG1GAFpT2ig%2FMj%2Bmu2I0yVMfl21U1RgLVKWjpg%3D\";\r\n\r\n    // Create a new BlobServiceClient\r\n    const blobServiceClient = new BlobServiceClient(blobSasUrl);\r\n    // Get a container client from the BlobServiceClient\r\n    const containerClient = blobServiceClient.getContainerClient(containerName);\r\n\r\n    const blockBlobClient = containerClient.getBlockBlobClient(blobName);\r\n    \r\n    await blockBlobClient.upload(data, data.length);\r\n}\r\n\r\nconst downloadFromBlob = async (containerName, blobName) => {\r\n    const blobSasUrl = \"https://mileswadestorage.blob.core.windows.net/?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2020-09-13T04:53:53Z&st=2020-09-12T20:53:53Z&spr=https,http&sig=0cR8UDG1GAFpT2ig%2FMj%2Bmu2I0yVMfl21U1RgLVKWjpg%3D\";\r\n\r\n    // Create a new BlobServiceClient\r\n    const blobServiceClient = new BlobServiceClient(blobSasUrl);\r\n    // Get a container client from the BlobServiceClient\r\n    const containerClient = blobServiceClient.getContainerClient(containerName);\r\n    const blockBlobClient = containerClient.getBlockBlobClient(blobName);\r\n\r\n    const blobClient = containerClient.getBlobClient(blobName);\r\n    const downloadBlockBlobResponse = await blobClient.download();\r\n\r\n    await blobToString(await downloadBlockBlobResponse.blobBody);\r\n\r\n    return downloaded;\r\n\r\n    async function blobToString(blob)  {\r\n        const fileReader = new FileReader();\r\n        return new Promise((resolve, reject) => {\r\n          fileReader.onloadend = (ev) => {\r\n            resolve(ev.target.result);\r\n          };\r\n          fileReader.onerror = reject;\r\n          fileReader.readAsText(blob);\r\n        });\r\n      }\r\n\r\n}\r\n\r\nconst deleteBlob = async (containerName, blobName) => {\r\n    const blobSasUrl = \"https://mileswadestorage.blob.core.windows.net/?sv=2019-12-12&ss=bfqt&srt=sco&sp=rwdlacupx&se=2020-09-13T04:53:53Z&st=2020-09-12T20:53:53Z&spr=https,http&sig=0cR8UDG1GAFpT2ig%2FMj%2Bmu2I0yVMfl21U1RgLVKWjpg%3D\";\r\n\r\n    // Create a new BlobServiceClient\r\n    const blobServiceClient = new BlobServiceClient(blobSasUrl);\r\n    // Get a container client from the BlobServiceClient\r\n    const containerClient = blobServiceClient.getContainerClient(containerName);\r\n\r\n    await containerClient.deleteBlob(option.text);\r\n}\r\n\r\nvar myGameArea = {\r\n    canvas : document.createElement(\"canvas\"),\r\n    start : function() {\r\n        this.canvas.setAttribute('id', 'board');\r\n        this.canvas.height = screenSize.height;\r\n        this.canvas.width = screenSize.width;\r\n        // i.e., on a phone\r\n        if (setGameBoardMarginToZero) {\r\n            this.canvas.style.marginLeft = \"0px\";\r\n        }\r\n        else {\r\n            this.canvas.style.marginLeft = String((window.innerWidth - this.canvas.width) / 2) + \"px\";\r\n        }\r\n        this.context = this.canvas.getContext(\"2d\");\r\n        document.body.insertBefore(this.canvas, document.body.childNodes[0]);\r\n        rectangle(sideBarWidth, screenSize.height, \"#1f1f14\", screenSize.width - sideBarWidth, 0);\r\n        drawBoard();\r\n        drawGuessButtons();\r\n        drawGradeButtons();\r\n        drawDoneButton(doneButton);\r\n        drawHelpButton(helpButton);\r\n        drawBackButton(backButton);\r\n        drawResetButton(resetButton);\r\n        drawModeButton(modeButton);\r\n        drawMainButton(mainButton);\r\n        if (mode.value === mode.codeBreaker) {\r\n            computerCode();\r\n        }\r\n    },\r\n    clear : function() {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    },\r\n    reset: function() {\r\n        // set state variables. this is super unacceptable\r\n        grade.reds = 0;\r\n        grade.whites = 0;\r\n        element.x = 0;\r\n        element.y = 0;\r\n\r\n        clickRound = 0;\r\n\r\n        guessMatrix =   [['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0'],\r\n                             ['0', '0', '0', '0']];\r\n        \r\n        temp = 0;        \r\n        code = [];\r\n        gradeRow = 0\r\n\r\n        this.start();\r\n    },\r\n\r\n    backCB: function() {\r\n        if (element.x != 4) {\r\n            guessMatrix[element.y - 1][element.x - 1] = '0'\r\n\r\n            drawGuessCircle(element.x, element.y, \"black\")\r\n            if (element.x == 1) {\r\n                element.x = 4;\r\n                element.y -= 1;\r\n            }\r\n            else {\r\n                element.x -= 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    backCM: function(grading) {\r\n        if (grading) {\r\n            for (i=0; i<4; i++) {\r\n                drawGradeCircle(i+1, element.y, \"black\");\r\n            }\r\n            grade.reds = 0;\r\n            grade.whites = 0;\r\n        }\r\n        else {\r\n            drawGuessCircle(temp, 0, \"black\")\r\n            temp -= 1\r\n            code.pop()\r\n            if (temp === 3) {\r\n\r\n                for (i=0; i<4; i++) {\r\n                    drawGuessCircle(i+1, 1, \"black\")\r\n                    guessMatrix[0] = ['0', '0', '0', '0']\r\n                    element.x = 1;\r\n                    element.y = 1;\r\n\r\n                }\r\n            }\r\n        }\r\n    },\r\n    resetStats: function() {\r\n        if (confirm(\"Are you sure you want to reset your statistics?\")) {\r\n            startStats(currentUsername);\r\n            startStatPage();\r\n        }\r\n    }\r\n\r\n        \r\n\r\n}\r\n\r\nfunction drawStartButtons() {\r\n    //var optionsDiv = document.getElementById(\"startButtons\");\r\n    //optionsDiv.style.height = String(0.9 * screenSize.height) + 'px';\r\n    /*\r\n    var optionsDiv = document.getElementById(\"Play\");\r\n    optionsDiv.style.top = String(0.4 * screenSize.height) + 'px';\r\n    optionsDiv.style.left = String(0.97 * screenSize.height) + 'px';\r\n    \r\n    var optionsDiv = document.getElementById(\"Stats\");\r\n    optionsDiv.style.top = String(0.7 * screenSize.height) + 'px';\r\n    optionsDiv.style.left = String(0.97 * screenSize.height) + 'px';\r\n    \r\n    var optionsDiv = document.getElementById(\"Settings\");\r\n    optionsDiv.style.top = String(screenSize.height) + 'px';\r\n    optionsDiv.style.left = String(0.97 * screenSize.height) + 'px';\r\n    */\r\n}\r\n\r\nfunction drawGuessButtons() {\r\n    var hOffset = verticalOffsetOfCanvas;\r\n    hOffset += (screenSize.height * 1.5 / numRows) - (buttonSize / 2);\r\n    drawGuessButton(redButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(blueButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(greenButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(yellowButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(purpleButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGuessButton(whiteButton, hOffset);\r\n}\r\n\r\nfunction drawGradeButtons() {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)*7 + (screenSize.height * 1.5 / numRows) - (gradeButtonSize / 2);\r\n    drawGradeButton(redGradeButton, hOffset);\r\n    hOffset += (screenSize.height / numRows);\r\n    drawGradeButton(whiteGradeButton, hOffset);\r\n}\r\n\r\nfunction drawMainButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(sideBarWidth - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft + guessBarWidth + 1;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \" Main Menu\";\r\n    var arrow = document.createElement(\"I\")\r\n    arrow.classList.add(\"arrow\");\r\n    arrow.classList.add(\"left\")\r\n    //button.appendChild(arrow);\r\n    button.insertBefore(arrow, button.childNodes[0])\r\n    \r\n    //button.style.textAlign = \"center\";\r\n    //button.style.fontSize = '13px';\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\nfunction drawDoneButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 10 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(sideBarWidth - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft + guessBarWidth + gradeBarWidth + 1;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Done\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawHelpButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(((guessBarWidth + gradeBarWidth) / 3) - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    //alert((guessBarWidth + gradeBarWidth) / 3)\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Help\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawBackButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(((guessBarWidth + gradeBarWidth) / 3) - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var baseWidth = document.getElementById(\"board\").offsetLeft;\r\n    var addedWidth = (guessBarWidth + gradeBarWidth) / 3;\r\n    var wOffset = baseWidth + addedWidth;\r\n    //alert(addedWidth)\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Back\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawResetButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(((guessBarWidth + gradeBarWidth) / 3) - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var baseWidth = document.getElementById(\"board\").offsetLeft;\r\n    var addedWidth = ((guessBarWidth + gradeBarWidth) / 3);\r\n    var wOffset = baseWidth + addedWidth * 2 + 1\r\n    //alert(addedWidth)\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = \"Reset\";\r\n    button.style.color = \"white\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawModeButton(button) {\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    button.style.position = 'absolute';\r\n    button.style.width = String(sideBarWidth - 1) + \"px\";\r\n    button.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    button.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft + guessBarWidth + gradeBarWidth + 1;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    button.textContent = mode.value;\r\n    //button.style.textAlign = \"center\";\r\n    //button.style.fontSize = '13px';\r\n    button.style.color = \"grey\";\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawGuessButton(button, hOffset) {\r\n    var buttonSizePx = buttonSize + 'px';\r\n    button.style.position = 'absolute';\r\n    button.style.borderRadius = '100%'\r\n    button.style.width = buttonSizePx;\r\n    button.style.height = buttonSizePx;\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    wOffset += screenSize.width - (sideBarWidth / 2) - buttonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction drawGradeButton(button, hOffset) {\r\n    var buttonSizePx = (buttonSize / 2)+ 'px';\r\n    button.style.position = 'absolute';\r\n    button.style.borderRadius = '100%'\r\n    button.style.width = buttonSizePx;\r\n    button.style.height = buttonSizePx;\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    wOffset += screenSize.width - (sideBarWidth / 2) - gradeButtonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    button.style.top = hOffsetStr;\r\n    button.style.left = wOffsetStr;\r\n    document.body.appendChild(button);\r\n}\r\n\r\nfunction redButtonClick () {\r\n    processClick(redButton.style.backgroundColor);\r\n}\r\n\r\nfunction blueButtonClick () {\r\n    processClick(blueButton.style.backgroundColor);\r\n}\r\n\r\nfunction greenButtonClick () {\r\n    processClick(greenButton.style.backgroundColor);\r\n}\r\n\r\nfunction yellowButtonClick () {\r\n    processClick(yellowButton.style.backgroundColor);\r\n}\r\n\r\nfunction purpleButtonClick () {\r\n    processClick(purpleButton.style.backgroundColor);\r\n}\r\n\r\nfunction whiteButtonClick () {\r\n    processClick(whiteButton.style.backgroundColor);\r\n}\r\n\r\nfunction redGradeButtonClick () {\r\n    processGradeClick(redGradeButton.style.backgroundColor);\r\n}\r\n\r\nfunction whiteGradeButtonClick () {\r\n    processGradeClick(whiteGradeButton.style.backgroundColor);\r\n}\r\n\r\nwindow.mainButtonClick = function mainButtonClick() {\r\n    window.location.href = \"index.html\";\r\n}\r\n\r\nfunction doneButtonClick() {\r\n    if (mode.value == mode.codeMaker && code != []) {\r\n        for (index=0; index<10; index++) {\r\n            row = guessMatrix[index]\r\n            //alert(row)\r\n            if (row.includes('0')) {\r\n                gradeRow = index;\r\n                //alert(\"breaking\")\r\n                break;\r\n            //alert(gradeRow)\r\n            }\r\n        }\r\n    }\r\n    //alert(gradeRow)\r\n    realGrade = [grade.reds, grade.whites]\r\n    computerGrade(guessMatrix[gradeRow - 1], code)\r\n    if ((grade.reds != realGrade[0]) || (grade.whites != realGrade[1])) {\r\n        alert(\"hmm. check your work...\")\r\n        grade.reds = realGrade[0]\r\n        grade.whites = realGrade[1]\r\n    }\r\n    \r\n    computerGuess(gradeRow)\r\n} \r\n\r\nfunction modeButtonClick() {\r\n    if (mode.value === mode.codeBreaker) {\r\n        mode.value = mode.codeMaker;\r\n    }\r\n    else {\r\n        mode.value = mode.codeBreaker;\r\n    }\r\n    document.getElementById(\"modeButton\").textContent = mode.value;\r\n    myGameArea.reset();\r\n    if (mode.value === mode.codeBreaker) {\r\n        computerCode();\r\n    }\r\n\r\n} \r\n\r\n\r\nfunction helpButtonClick() {\r\n    /*var instructionsButton = document.createElement(\"button\");\r\n    instructionsButton.id = \"helpButton\";\r\n    instructionsButton.style.backgroundColor = 'white';\r\n    instructionsButton.style.border = 'white';\r\n    helpButton.addEventListener('click', function() { helpButtonClick(); });\r\n\r\n    var hOffset = verticalOffsetOfCanvas + (screenSize.height / numRows)* 11 - 1;\r\n    instructionsButton.style.position = 'absolute';\r\n    instructionsButton.style.width = String(guessBarWidth + gradeBarWidth - 1) + \"px\";\r\n    instructionsButton.style.height = String((screenSize.height / numRows) - 1) + \"px \";\r\n    instructionsButton.style.borderRadius = \"0px\";\r\n    var wOffset = document.getElementById(\"board\").offsetLeft;\r\n    //wOffset += screenSize.width - (sideBarWidth / 2) - instructionsButtonSize / 2;\r\n    wOffsetStr = wOffset + 'px';\r\n    hOffsetStr = hOffset + 'px';\r\n    instructionsButton.style.top = hOffsetStr;\r\n    instructionsButton.style.left = wOffsetStr;\r\n    instructionsButton.textContent = \"Just do it\";\r\n    instructionsButton.style.color = \"black\";\r\n    document.body.appendChild(instructionsButton);\r\n    //instructionsButton.addEventListener('click', function() { helpButtonClick(); });\r\n        \r\n    //textBlock.innerText = \"Help\";\r\n    //document.body.appendChild(textBlock);*/\r\n    var msg = \"Welcome to Mastermind. \";\r\n    msg += \"Attempt to guess the secret code or create a secret code for the computer to guess.\\n\\n\";\r\n    msg += \"To guess or grade, use the buttons on the right-hand side of the game board. \";\r\n    msg += \"To change play mode, click the \\\"Maker/Breaker\\\" button in the lower right corner of the game board.\\n\";\r\n    msg += \"A red grade peg indicates that a guess is the correct color in the correct position. \";\r\n    msg += \"A white grade peg indicates that a guess is the correct color, but in the incorrect position. \";\r\n\r\n    alert(msg);\r\n\r\n} \r\n\r\nfunction backButtonClick() {\r\n    if (mode.value == mode.codeMaker) {\r\n        myGameArea.backCM();\r\n    }\r\n    else {\r\n        myGameArea.backCB()\r\n    }\r\n}\r\n\r\nfunction resetButtonClick() {\r\n    myGameArea.reset()\r\n}\r\n\r\nwindow.resetStatClick = function resetStatClick() {\r\n    myGameArea.resetStats();\r\n}\r\n\r\n\r\nwindow.settingsButtonClick = function settingsButtonClick() {\r\n    alert(\"coming soon\")\r\n}\r\n\r\n\r\nfunction processClick(color) {\r\n    if (mode.value === mode.codeBreaker) {\r\n        getClickIndex();\r\n        drawGuessCircle(element.x, element.y, color);\r\n        guessMatrix[element.y - 1][element.x - 1] = color;\r\n        if (element.x < 4) {\r\n        }\r\n        //finished a guess\r\n        else {\r\n            //make this the actual grade\r\n            gradeRow = element.y - 1\r\n            toBeGraded = guessMatrix[gradeRow]\r\n            computerGrade(toBeGraded, code);\r\n            var y = element.y;\r\n            var x = 0;\r\n            for (i = 1; i <= grade.reds; i++) {\r\n                x++;\r\n                drawGradeCircle(x, y, \"red\");\r\n            }\r\n            for (i = 1; i <= grade.whites; i++) {\r\n                x++;\r\n                drawGradeCircle(x, y, \"white\");\r\n            }\r\n            \r\n            if (grade.reds === 4) {\r\n                newHighScore = setStats(true, element.y);\r\n                winScreen();\r\n                setTimeout(function() {\r\n                    msg = \"Congratulations, you won! \\n\";\r\n                    if (newHighScore) {\r\n                        msg += \"New high score: \" + userStats.highScore + \"! \\n\"\r\n                    }\r\n                    msg += \"Play again?\"\r\n                    \r\n                    for (j=0; j<4; j++) {\r\n                        drawGuessCircle(j + 1, 0, code[j]);\r\n                    }\r\n\r\n                    if (confirm(msg)) {\r\n                        myGameArea.reset();\r\n                    }\r\n                    else {\r\n                        //should we leave it how it is, or go to the main menu?\r\n                        //i think main menu\r\n                        //hmm actually maybe just leave it how it is, and then make a button to go back to the main menu\r\n                    }\r\n\r\n                }, 2500);\r\n\r\n                \r\n            }\r\n            else if (element.y === 10) {\r\n                setStats(false, 10);\r\n                loseScreen();\r\n                setTimeout(function() {\r\n                    alert(\"Nice try :(\");\r\n                }, 1500)\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (temp < 4) {\r\n            temp += 1\r\n            drawGuessCircle(temp, 0, color);\r\n            code.push(color)\r\n            if (temp === 4) {\r\n                computerGuess(0)\r\n            }\r\n        }\r\n        else {\r\n            alert(\"You are the code maker, you can't try to crack your own code.\");\r\n        }\r\n    }\r\n}\r\n\r\nfunction processGradeClick(color) {\r\n    if (mode.value == mode.codeMaker) {\r\n        numPlayerGradeClicks++;\r\n        if (numPlayerGradeClicks > 4) {\r\n            alert(\"too many player grades entered\");\r\n        }\r\n        else {\r\n            if (color === \"red\") {\r\n                grade.reds++;\r\n            }\r\n            else if (color === \"white\") {\r\n                grade.whites++;\r\n            }\r\n            drawGradeCircle(numPlayerGradeClicks, element.y, color);\r\n        }\r\n    }\r\n    else {\r\n        alert(\"You are the code breaker, you can't grade your own guess.\");\r\n    }\r\n}\r\n\r\nfunction getClickIndex() {\r\n    for (i=0; i < 10; i++) {\r\n        for (j=0; j < 4; j++) {\r\n            if (guessMatrix[i][j] === '0') {\r\n                element.x = j + 1;\r\n                element.y = i + 1;\r\n                return;\r\n            } \r\n        }\r\n    }\r\n}\r\n\r\nfunction rectangle(width, height, color, x, y) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;    \r\n    ctx = myGameArea.context;\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(this.x, this.y, this.width, this.height);\r\n}\r\n\r\nfunction circle(r, color, x, y) {\r\n    this.r = r;\r\n    this.x = x;\r\n    this.y = y;\r\n    ctx = myGameArea.context;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(this.x, this.y, this.r, 0, 2*Math.PI);\r\n    ctx.fill();\r\n}\r\n\r\nfunction text(font, text, x, y) {\r\n    //this.font = font\r\n    //this.text = text\r\n    //this.x = x\r\n    //this.y = y\r\n    ctx = myGameArea.context;\r\n    ctx.font = font;\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillStyle = \"white\"\r\n    ctx.fillText(text, x, y, 0.8 * sideBarWidth);\r\n}\r\n\r\nfunction drawGuessCircle(x_loc, y_loc, color) {\r\n    this.x = x_loc * guessBarWidth / 5;\r\n    this.y = y_loc * screenSize.height / numRows + screenSize.height / (numRows * 2 );\r\n    circle(guessr, color, this.x, this.y);\r\n}\r\n\r\nfunction drawGradeCircle(x_loc, y_loc, color) {\r\n    this.x = guessBarWidth + (x_loc * gradeBarWidth / 5);\r\n    this.y = y_loc * screenSize.height / numRows + screenSize.height / (numRows * 2 );\r\n    circle(grader, color, this.x, this.y);\r\n}\r\n\r\n\r\n\r\nfunction winScreen() {\r\n    var mode = 0;\r\n    var flashing = setInterval(flash, 100);\r\n    function flash() {\r\n        mode++;\r\n        if (mode % 2 == 1) {\r\n            for (j=0; j<4; j++) {\r\n                drawGuessCircle(j + 1, 0, code[j]);\r\n            }\r\n        }\r\n        else {\r\n            for (j=0; j<4; j++) {\r\n                drawGuessCircle(j + 1, 0, \"black\");\r\n            }\r\n        }\r\n        if (mode == 20) {\r\n            clearInterval(flashing)\r\n        }\r\n    }\r\n}\r\n\r\nfunction loseScreen() {\r\n    var count = 0;\r\n    var flashing = setInterval(change, 200);\r\n\r\n    function change() {\r\n        count++;\r\n        if (count == 5) {\r\n            clearInterval(flashing)\r\n        }\r\n        \r\n        else {\r\n            for (j=0; j<4; j++) {\r\n                color = colors[Math.floor(Math.random() * 6)];\r\n                drawGuessCircle(j + 1, 0, color);\r\n            }\r\n        }\r\n        \r\n    }\r\n    //alert(\"real code now...\")\r\n    //alert(code)\r\n    setTimeout(function() {\r\n        for (j=0; j<4; j++) {\r\n            drawGuessCircle(j + 1, 0, code[j]);\r\n        }\r\n    }, 1000);\r\n    //alert(\"drew real code\")\r\n}\r\n\r\nfunction uploadStats(currentUsername) {\r\n    statsStr = JSON.stringify(userStats);\r\n    containerName = \"mw-mastermind-stats\";\r\n    //uploadToBlob(containerName, currentUsername, statsStr);\r\n}\r\n\r\nfunction getStats(currentUsername) {\r\n    containerName = \"mw-mastermind-stats\";\r\n    try {\r\n    statsStr = downloadFromBlob(containerName, currentUsername)\r\n    }\r\n    catch (error) {\r\n        startStats(currentUsername);\r\n    }\r\n    //userStats = JSON.parse(statsStr);\r\n}\r\n\r\nfunction startStats(currentUsername) {\r\n    var userStats = {\r\n        highScore: 10,\r\n        gamesPlayed: 0,\r\n        gamesWon: 0,\r\n        winRate: 0,\r\n        averageTries: 0,\r\n        timesVisited: 1\r\n    }\r\n    uploadStats(currentUsername);\r\n}\r\n\r\nfunction setStats(won, score) {\r\n    getStats();\r\n    if (score < userStats.highScore) {\r\n        userStats.highScore = score;\r\n        newHighScore = true;\r\n    }\r\n    else {\r\n        newHighScore = false;\r\n    }\r\n    currentGP = userStats.gamesPlayed;\r\n    newGP = currentGP + 1;\r\n    userStats.gamesPlayed = newGP;\r\n    if (won) {\r\n        currentGW = userStats.gamesWon;\r\n        newGW = currentGW + 1;\r\n        userStats.gamesWon = newGW;\r\n    }\r\n    newWR = Math.floor(newGW / newGP) * 100;\r\n    userStats.winRate = newWR;\r\n    currentAT = userStats.averageTries;\r\n    currentTotalPoints = currentAT * currentGP;\r\n    //alert(currentTotalPoints)\r\n    newTotalPoints = currentTotalPoints + score;\r\n    newAT = newTotalPoints / userStats.gamesPlayed;\r\n    //alert(newAT)\r\n    userStats.averageTries = newAT;\r\n    uploadStats();  \r\n    return newHighScore;\r\n}\r\n\r\n\r\nfunction computerGrade(toBeGraded, code) {\r\n    if (toBeGraded.includes('0')) {\r\n        alert(\"Error 123: Coding Fail\");\r\n    }\r\n    grade.reds = 0;\r\n    grade.whites = 0;\r\n    const guess_2 = [];\r\n    const code_2 = [];\r\n    for (i = 0; i < 4; i++) {\r\n        if (code[i] === toBeGraded[i]) {\r\n            grade.reds++;  \r\n        }\r\n        else {\r\n            guess_2.push(toBeGraded[i]);\r\n            code_2.push(code[i]);\r\n        }\r\n    }\r\n    while (guess_2.length !== 0) {\r\n        if (code_2.includes(guess_2[0])) {\r\n            grade.whites++;\r\n            toRemoveIndex = code_2.indexOf(guess_2[0]);\r\n            code_2.splice(toRemoveIndex, 1);\r\n        }\r\n        guess_2.splice(0, 1);\r\n    }\r\n}\r\n\r\nfunction removeCodes(posCodes, prevGuess) {\r\n    var newPosCodes = [];\r\n    //alert(\"in remove codes\");\r\n    //alert(length(posCodes));\r\n    realGrade = [grade.reds, grade.whites];\r\n    for (index = 0; index < posCodes.length; index++) {\r\n        //grade.reds = 0;\r\n        //grade.whites = 0;\r\n        //alert(index)\r\n        posCode = posCodes[index];\r\n        \r\n        //alert(\"grades\");\r\n        //alert(realGrade[0]);\r\n        //alert(realGrade[1]);\r\n        computerGrade(prevGuess, posCode);\r\n        //alert(prevGuess);\r\n        //alert(posCode);\r\n        //alert(grade.reds);\r\n        //alert(grade.whites);\r\n        if ((grade.reds == realGrade[0]) && (grade.whites == realGrade[1])) {\r\n            //alert(\"idk what to sayyy\");\r\n            newPosCodes.push(posCode);\r\n        }\r\n    }\r\n    posCodes = newPosCodes;\r\n    grade.reds = realGrade[0];\r\n    grade.whites = realGrade[1];\r\n    return posCodes;\r\n}\r\n\r\n\r\nfunction computerGuess(gradeRow) {\r\n    if (gradeRow === 0) {\r\n        //very random, change\r\n        guess = [\"yellow\", \"green\", \"blue\", \"white\"]\r\n    }\r\n    else if (grade.reds === 4) {\r\n        alert(\"Computer Wins!!!\");\r\n        myGameArea.reset();\r\n        return;\r\n        \r\n        //end program\r\n        //idk how...\r\n        //dad's reset func?\r\n    }\r\n    else {\r\n        //alert(\"here\")\r\n        //alert(guessMatrix[gradeRow - 1])\r\n        //alert(grade.reds + \",\" + grade.whites);\r\n        posCodes = removeCodes(posCodes, guessMatrix[gradeRow - 1])\r\n        //alert(grade.reds + \",\" + grade.whites);\r\n        //alert(posCodes)\r\n        //this is just picking a random one, maybe change it\r\n        len = posCodes.length;\r\n        if (len === 0) {\r\n            alert(\"hmm. check your work...\")\r\n        }\r\n        guess = posCodes[len - 1]\r\n    }\r\n    //alert(\"drawing...\")\r\n    //alert(guess)\r\n    for (index=0; index<4; index++) {\r\n        drawGuessCircle(index + 1, gradeRow + 1, guess[index]);\r\n    }\r\n    guessMatrix[gradeRow] = guess;\r\n    element.y++;\r\n    numPlayerGradeClicks = 0;\r\n    grade.reds = 0;\r\n    grade.whites = 0;\r\n}\r\n\r\nfunction computerCode() {\r\n    code = []\r\n    //alert()\r\n    for (i=0; i<4; i++) {\r\n        code.push(colors[Math.floor(Math.random() * 6)]);\r\n    }\r\n    //this displays it, which... it definitely shouldn't, \r\n    //but lets leave it here while we are still working\r\n    /*\r\n    for (index=0; index<4; index++) {\r\n        color = code[index];\r\n        drawGuessCircle(index + 1, 0, color);\r\n    }\r\n    */\r\n}\r\n\r\n\r\n\r\nfunction drawBoard() {\r\n    var skip_lines = [1, 7, 8, 10];\r\n    for (i = 1; i < numRows; i++) {\r\n        //horizontal lines\r\n        this.y = i * screenSize.height / numRows;\r\n        if (!(skip_lines.includes(i))) {\r\n            rectangle(screenSize.width - sideBarWidth, 1, \"black\", 0, this.y);\r\n        } \r\n        else {\r\n            rectangle(screenSize.width, 1, \"black\", 0, this.y);\r\n        }\r\n    }\r\n    //dividing vertical lines\r\n    rectangle(1, screenSize.height, \"black\", guessBarWidth, 0);\r\n    rectangle(1, screenSize.height, \"black\", guessBarWidth + gradeBarWidth, 0);\r\n\r\n    //shade the code box\r\n    rectangle(guessBarWidth, (screenSize.height / numRows), \"#331a00\", 0, 0)\r\n    rectangle(gradeBarWidth - 1, screenSize.height / numRows, \"331a00\", guessBarWidth + 1, 0)\r\n\r\n\r\n    this.guessr = (screenSize.height / (numRows * 2)) * 0.5;\r\n    this.grader = (screenSize.height / (numRows * 2)) * 0.2;\r\n    for (i = 0; i <  numRows; i++) {\r\n        this.y = i * screenSize.height / numRows + screenSize.height / (numRows * 2 );\r\n        for (j = 1; j < 5; j++) {\r\n            //guessing circles\r\n            this.x = j * guessBarWidth / 5;\r\n            circle(this.guessr, \"black\", this.x, this.y);\r\n            //grading circles\r\n            //don't need a grade for the code\r\n            if (i !== 0) {\r\n                this.x = guessBarWidth +     (j * gradeBarWidth / 5);\r\n                circle(this.grader, \"black\", this.x, this.y);\r\n            }\r\n        }\r\n    }\r\n    this.fontSize = screenSize.height / numRows * 0.4;\r\n    this.fontString = fontSize + \"px Arial\"\r\n    text(this.fontString, \"GUESSES\", guessBarWidth + gradeBarWidth * 1.5, (screenSize.height / (numRows * 2)) + fontSize / 2);\r\n    text(this.fontString, \"GRADES\", guessBarWidth + gradeBarWidth * 1.5, screenSize.height - (screenSize.height * 3 / numRows) - fontSize);\r\n    //computerCode();\r\n    //computerGuess(0)\r\n}\r\n\r\n"]}